MikuMikuEffect用発光フィルタ Ver.1.3


製作：そぼろ

特定のオブジェクトを選択し、その部分を発光している感じにする
エフェクトフィルタです。
光源として作用するわけではない点に注意してください。

このエフェクトは 基本的にObjectLuminous.fx と OL_Selector.fx の
2つのエフェクトファイルの組み合わせで使用します。
OL_Selector.fx は発光させたい各モデルに対して適用され、
発光させたい素材番号、発光色などをコントロールします。
ObjectLuminous.fx はポストエフェクトとして動作し、
発光の度合いなどをコントロールします。
詳細は各項目を参照してください。

舞力介入PのGaussian.fxをベースにさせていただきました（もはや別物ですが）
調整用パラメータは先頭に集めたので適宜変更してください。

汎用fx編集ツールfxinputに（そこそこ）対応しています。


●更新履歴

Ver.1.3
描画順をどこでもOKに

Ver.1.2
OL_BlackMask.fx を微改良

Ver.1.1
OL_MonoSelect.fx と OL_SimpleSelect.fx 同梱

Ver.1
公開開始


●基本的な仕組み

MME0.2より導入されたOFFSCREENRENDERTARGETを利用しています。
見えない画面へと、OL_Selector.fxを用いて、
光らせたい部分を発光色で描画し、他の部分を黒で描画します。
このような、オフスクリーンバッファに発光部分を描画するエフェクトを
ここではセレクタエフェクトと呼ぶこととします。

ObjectLuminous.fxはその描画結果をぼかした上で、MMDの画面上に
加算合成します。

キーカラーを用いる場合と違い元オブジェクトの色はそのまま残るため、
コア色の概念はなくなりました。
それに伴い、半透明の発光物体なども表現可能になりました。

セレクタエフェクトは必ずしもOL_Selector.fxに頼る必要はなく、
要は発光部分が描画されればOKです。
例えば、紹介動画ではTexSnow.fxをそのまま用いています。


●OL_Selector.fx

指定した素材を指定した発光色で、それ以外を黒で描画するセレクタエフェクトです。
基本的にモデル（またはアクセサリ）ごとに用意する必要があります。
同梱のファイルに番号が振られているのはそのためです。

同梱の OL_Selector1.fx は 初音ミクVer2.pmd に、
OL_Selector_ST.fx はstage01.x に対応したものとなっています。

どのモデルにどのOL_Selectorを適用するかは、
ObjectLuminous.fxを編集するか、
MME上の OL_EmitterRTタブから指定することもできます。

以下のようなパラメータを指定できます。

・TargetSubsetX

発光対象とする素材のサブセット番号を指定します。
PMDの場合、素材番号と一致します。
「"0"」のように、ダブルクオーテーションで数字を囲んで指定します。
複数の素材を指定する場合、カンマで区切るか、ハイフンで連続指定できます。
モデル全体を指定する場合は「"0-"」のようにします。
素材を指定しない場合は「""」のように空にしてください。
例："2,6,15-16"

・BlockSubset

顔などのように、光が被さってほしくない素材を指定します。
指定方法はTargetSubsetXと同じです。

・Emittion_ColorX

放射光の色を指定します。
RGBAの各要素を、それぞれ0.0〜1.0の範囲で指定してください。

・GainX

放射光のゲインを指定します。
Emittion_ColorのRGB要素にそれぞれこの値が掛けられるものと考えてください。
Emittion_Colorを直接変更すれば必ずしも必要ではないですが、
操作を楽にするために用意されています。

・KeyTexColor3

複雑な模様のテクスチャの、特定の部分だけ光らせたい場合に備え用意された
キーカラーのパラメータです。
KeyLuminousと異なり、テクスチャの色によってのみ判定されます。
TargetSubset3の追加条件として働くので、
TargetSubset3で指定された素材のうちでテクスチャ色が一致した場合のみ
Emittion_Color3が描画されることになります。
テクスチャの無い素材には無効です。
また、A値が0のときは使われません。

・KeyThreshold

キーカラーの認識閾値です。


●OL_BlackMask.fx

モデルを黒く塗りつぶして描画するセレクタエフェクトです。
光らせたい部分がなく、かつ他モデルの発光部分を覆い隠す可能性のあるモデルに
適用します。

特にユーザーが指定するパラメータはありません。

●OL_MonoSelect.fx

指定されたオブジェクトを単一の色で塗りつぶすセレクタエフェクトです。
色ごとに用意すると便利かもしれません。
素材番号を指定する必要が無いので、その手間が省けます。
主に素材を一種類しか持たないモデルに割り当てたり、
MMEのOL_EmitterRTタブから、サブセット展開した上で素材ごとに割り当てます。

●OL_SimpleSelect.fx

指定されたオブジェクトを元の素材の色で塗りつぶすセレクタエフェクトです。
ユーザーが指定するパラメータはないので、改造せずに汎用的に使えますが、自由度は低いです。
OL_MonoSelect.fxと同じように、主に素材を一種類しか持たないモデルや、
MMEのOL_EmitterRTタブから、サブセット展開した上で素材ごとに割り当てます。


●ObjectLuminous.fx

OL_Selector.fx または OL_BlackMask.fx を用いて
オフスクリーンバッファに各モデルの発光部分を描画し、
それをぼかした上でMMD画面上に加算合成するポストエフェクトです。

以下のようなパラメータを指定できます。

・OL_EmitterRT の DefaultEffectアノテーション
どのモデルにどの発光描画エフェクトを適用するかを指定します。
詳細はMMEのリファレンスを参照してください。

例を挙げると、
最初は "self = hide;" これはダミーアクセサリとしてのObjectLuminous.xを隠します。

次に "〇〇.pmd = OL_Selector△△.fx;" のように、
モデルファイルとセレクターエフェクトの対応を並べていきます。

最後に "* = OL_BlackMask.fx;" によって、その他のモデルを黒く塗りつぶします。
発光部位を持つモデルが、他のモデルまたはアクセサリによって
隠されることが一切ないと保証できる場合は、これを削除することができます。
それによって軽くなるはずです。


・Extent_S
・Extent_G

放射部分は2種類のぼかしの組み合わせになっており、
それぞれのぼかしの範囲を指定します。
大きくすると光が広がります。
上手く説明するのが難しいですが、Extent_Sを大きくすると
光が膨らみ、Extent_Gを大きくすると光が薄く広がります。

・Strength_A
・Strength_B

エフェクトの強度を指定するパラメータです。
これも説明が難しいので実際に試してみてください。

・Interval

点滅周期を設定します。
単位はフレームです。
0にすると点滅しません。


●CrossLuminous.fx

十字のグレアを表現したObjectLuminous.fxの発展版です。
まだテスト版であり、相当に重いので注意。

小さすぎず、大きすぎず、丸っこい形状のオブジェクトに適しています。

基本的な使い方はObjectLuminous.fxと同じですが、
ぼかし範囲は小さめにしてください。

また、次の追加パラメータがあります。

・Aspect

光の細長さを指定します

・Angle

十字の傾きを指定します。単位はラジアンです。


●サンプルの試し方
・ObjectLuminous.x を読み込み
・初音ミクVer2.pmd を読み込み
ObjectLuminous.xの表示/非表示を切り替えてエフェクトをオン・オフできます
Si、Trの値を操作するとエフェクトのかかり方が変化します

上手くいったら、OL_Selector1.fx の TargetSubset3 を"9"に
変更してみてください。ヘッドセットの黄色い部分が光るはずです。

CrossLuminous.fx を試す場合、標準ではstage01.xに紐つけられています。


●制限

発光は、他のエフェクトがかかっていない状態をベースにして生成されます。
よって、Mirror.fxでの鏡像や、Clone.fxで増殖させたモデルを発光させることは
基本的にできません。
ただし、セレクタエフェクトを自前で用意できるのであればその限りではないかもしれません。
また、完全なポストエフェクトであるKeyLuminousならば適用できる場合があるので、
上手く使い分けてください。


●注意事項
・ポストエフェクトなので、通常オブジェクトよりも描画順序を先に設定してください。
・エフェクトを読みこむと、強制的に背景が黒になります。背景白だと見えないので・・・


●配布
改造・再配布は自由です。

ObjectLuminous専用モデルを配布する場合、
OL_Selector.fxの、そのモデル対応版を同梱してくれることを
期待してみます。

