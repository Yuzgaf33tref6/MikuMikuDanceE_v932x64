絶対的セルフシャドウエフェクト

製作：そぼろ

きれいなシャドウを得るためなら、どれだけ作業時間とマシンパワーが
必要になっても構わないという方向けの高品質シャドウエフェクトです。


■使用環境

SM3.0および浮動小数点テクスチャのミップマップをサポートするグラフィックボード
推奨VRAM：1GB以上


■使用方法

１．AbsoluteShadow.xを読み込みます。この時点では何も起こりません。
２．すべてのモデル・アクセサリに full_AS.fx を適用します。
３．モデル・アクセサリのセルフシャドウを有効にします。


AbsoluteShadow.x の位置がシャドウマップの中心になります。
また、AbsoluteShadow.x のSiによりシャドウマップの大きさが決定されます。

シャドウマップを大きくすればより広い範囲にセルフシャドウを発生させることができますが、
その分細かいシャドウが潰れ、エッジも汚くなります。
遠景、近景でうまく調整してください。
目安として、Si=1.0で標準ステージ全域、Si=10でガレキ町全域程度になります。

AbsoluteShadow.x のTrにより影の濃さを調整できます。
Trを小さくすると影が濃くなります。
この効果は標準ではPMDモデルには適用されません。
（人物モデルの影が濃くなりすぎるのを防止するためです）
PMDモデルにも適用したい時は full_AS.fx を編集して
PMD_SHADOWPOWERの値を大きくしてください。


■シェーダエフェクトのAbsoluteShadow対応

full.fxベースのシェーダエフェクトを、AbsoluteShadowに対応させる方法を説明します。
エフェクトの中身がfull.fxから大幅に変更されていた場合、
この方法では上手くいかないことがあります。
また、頂点変化系、増殖系のエフェクトには適用できません。


・まず、目的のエフェクトをこのフォルダにコピーします。
　末尾に"_AS"などつけると分かりやすくなります。

・エフェクトをエディタで開き、full_AS.fxを参考にしながら、以下4点を改造します。


　●先頭に以下のコードを追加します。

////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
// AbsoluteShadowシステム　ここから↓

float X_SHADOWPOWER = 1.0;
float PMD_SHADOWPOWER = 0.0;

#include "AbsoluteShadowShaderSystem.fx"

// AbsoluteShadowシステム　ここまで↑
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////


　●以下のコードを削除します

float4x4 LightWorldViewProjMatrix : WORLDVIEWPROJECTION < string Object = "Light"; >;


　●以下のコードを削除します

    pass ZValuePlot {
        AlphaBlendEnable = FALSE;
        VertexShader = compile vs_2_0 ZValuePlot_VS();
        PixelShader  = compile ps_2_0 ZValuePlot_PS();
    }

　●「// テクスチャ座標に変換」から始まり関数の最後までのコードを、以下のように置き換えます。

    /////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////
    // AbsoluteShadowシステム　ここから↓
    
    // テクスチャ座標に変換
    IN.ZCalcTex /= IN.ZCalcTex.w;
    float2 TransTexCoord = 0.5 + IN.ZCalcTex * float2(0.5, -0.5);
    
    float comp = saturate(dot(IN.Normal,-LightDirVec)*Toon);
    
    if(!any( saturate(TransTexCoord) != TransTexCoord ) ) { 
        // シャドウバッファ内
        
        ////VSM法の実装
        float2 depth = GetZBufSample(TransTexCoord);
        depth.y += 0.00002;
        float sigma2 = depth.y - depth.x * depth.x;
        float comp2 = sigma2 / (sigma2 + IN.ZCalcTex.z - depth.x);
        comp2 = saturate(comp2) + (comp2 < 0);
        
        comp = min(comp, comp2);
    }
    
    if ( useToon ) {
        // トゥーン適用
        ShadowColor.rgb *= MaterialToon;
        ShadowColor.rgb *= (1 - (1 - ShadowRate) * PMD_SHADOWPOWER);
    }else{
        ShadowColor.rgb *= (1 - (1 - ShadowRate) * X_SHADOWPOWER);
    }
    
    return lerp(ShadowColor, Color, comp);
    
    // AbsoluteShadowシステム　ここまで↑
    /////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////



■技術解説

MMD標準のセルフシャドウでは、パースペクティブ・シャドウマップという技法が使われています。
これは光源方向と視点方向の関係からシャドウマップ範囲を動的に変化させて
解像度を稼ぐものですが、カメラを動かすとシャドウの輪郭がぞわぞわ動く、
シャドウが出たり消えたりする、逆光に極端に弱いといった弱点がありました。

このエフェクトでは、高解像度の固定シャドウマップ＋バリアンス・シャドウマップ技法により
シャドウがカメラの影響を全く受けず、シャドウの輪郭がにじむようになっています。

代わりに、シャドウマップを大きくすると細かいシャドウが消えてしまう、
大幅に負荷が増加するといった欠点があります。

また、シーンごとに最適なシャドウマップの大きさを手動で調整するという手間がかかります。


■利用条件

いかなる利用も自由ですが、自己責任でお願いします。
また、このエフェクトについては特に、
動作しないことに対するサポートは一切いたしません。

