
//動画で実際に使用したMMTScriptです

//:screen 640,360

:font メイリオ
:bold

:align_center
:valign_center
:pos 0,0
:size 11
:edge 8

:fade 0.38
:autotime 0.16

:set def

:size 20
:autotime 0.32
:shadowblur 8
:fade 0.8

:set title

@0.5, 6
MikuMikutTelop 実用編

:get def

@+1
前回の紹介編を見てくれた方もそうでない方も、
MikuMikuTelop 実用編へようこそ。

@+1
この動画では、字幕エフェクト作成ツール、
MikuMikutTelopの具体的な使い方を紹介します。


@+1
※注意

動画公開時の最新バージョンは1.2です。
新しい機能も交えて説明するので
必ずアップデートしてください。
これまでのスクリプトもそのまま使えます。

:get title

@+2, 6
１．はじめに

:get def

@+1
まず断っておかなければならないのは、
MikuMikuTelopは動画編集ソフトのような
高機能な字幕を提供するものでは「ない」ということです。

@+1
代わりに、モーションと字幕のタイミングを合わせたい、
高機能はいらないからMMDだけで簡単に仕上げたい、
エフェクトを字幕にもかけたい、
3D空間上に字幕を配置したい、
などといった動画編集ソフトでは難しいニーズを
満たすことができるかもしれません。

:get title

@+1, 5
２．ツール本体の使い方

:get def

@+1
MMTScriptの記述されたファイルをドラッグ＆ドロップ
するだけです。そのファイルと同じフォルダに
(ファイル名)_MMTというフォルダが作られ、
テクスチャやエフェクトファイルがその中に
作成されます。

あとはエフェクト用のアクセサリをMMDで
読み込めば字幕が表示されます。

@+1
MikuMikuTelopにはMMEと同じく自動更新機能があり、
リストに登録されているスクリプトファイルを更新すると
エフェクトも更新されます。
それをさらにMMEが検出して、MMD上の表示に
すぐに反映されるようになっています。

:get title

@+2, 6
３．スクリプトの編集

:get def

@+1
基本、ただのテキストファイルと変わりないので、
メモ帳などのエディタで編集することができます。

サンプルをMikuMikuTelopに投入して、MMD上で
表示されることを確認したら、
実際に編集して表示される文字が変化することなどを
確認してみてください。


@+1
スクリプト形式にした理由は、この動画のような長い文章は
使い慣れたエディタで書きたいから、
というのがあったりします。

余談ですが、筆者愛用はEmEditor。
エフェクト書くのにも使ってます。

:get title

@+2, 6
４．パネルモード

:get def

@+1
アクセサリの「影」チェックボックスをオンにして、
エフェクト用アクセサリのセルフシャドウをオンにします。

@+1
すると、このように、字幕表示スクリーンが
ただの板ポリのようになって、3D空間上に配置されます。

アクセサリとして移動や回転もできます。

:billboard

@+1,9
ビルボード表示も可能です。

:pos_y +-20
:pos_x +-30

@*0
それぞれの字幕がカメラの方を向きます。

:billboard_off

:get title

@+2, 6
５．MMTScript・テキストコマンド

:get def

@+1
ここからはスクリプトの簡単な解説に入ります。
字幕を表示するためのコマンドを
「テキストコマンド」と呼びます。


@+1
これは
"@"(アットマーク) + 表示時刻 + ","(カンマ) + 表示長さ
のように表示します。
例を書くと、
@@ 10, 5
みたいな感じです。

テキストコマンドの後に続く文章が
字幕として表示されます。

@+1
標準の単位は秒ですが、数字の後に"F"を付けると
フレーム指定が可能です。

また、表示時刻の前に"+"(プラス)を付けると
直前の字幕の終わりから、
"*"(アスタリスク)を付けると
直前の字幕の開始からの相対時間を
設定することができます。


@+1
表示長さを省略すると文字数から
自動的に長さが設定されます。

:get title

@+2, 6
６．MMTScript・システムコマンド

:get def

@+1
システムコマンドは、書式など、
字幕がどのように表示されるかを設定するコマンドです。


@+1
基本は
":"(コロン) + コマンド名
の後に、スペースを挟んでパラメータが続きます。
パラメータの無いコマンドも多いです。

:size 20
:fontcolor 255,200,230
:bold
:italic
:underline
:pos 0, 50
:align_center
:valign_top
:edge 12
:edgecolor 0,30,80
:edge_round
:margin 25,25
:backcolor 100,255,0,30

@+1
システムコマンドを使うと、
たとえばこんな書式にしたり…

:get def

:fontcolor 230,255,200
:edge 0
:shadow 8
:shadowcolor 70,0,0
:shadowblur 8
:tate
:fade 2
:size 14

@+1
フェード時間をいじったり、
おまけで縦書き機能も
入れてみました。

:get def

@+1
色々あってここでは紹介しきれませんが、
ぜひ一度サンプルと仕様書に目を通して、
実際に試してみてください。


:align_left
:valign_top
:pos -90,90
:size 10
:fade 1

@10400F
MikuMikuDance 7.39
MikuMikuEffect 0.27
Visual C# 2010 Express

Sound:
　ビサイド島 - Final Fantasy X PianoCollections
　　MIDI: ちゅーそん
　
　風紋 - Final Fantasy X-2 PianoCollections
　　演奏：Arkton

:end


文字ばっかりの動画です。ほとんど全部MikuMikuTelopで作りました。
Readmeとスクリプト仕様書の要点をまとめた感じの動画になっています。
これらを完璧に読み込んだ方であればこの動画を

