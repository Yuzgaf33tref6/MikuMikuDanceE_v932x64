
■PathMakerプラグイン機能

Ver.0.4より本格的にプラグイン機能が実装されました
自分でプラグイン作ったるぜ！という奇特な人のために技術情報を公開します
自分はこのサイトを参考にしました
http://dobon.net/vb/dotnet/programing/plugin.html

※Ver.0.6以前はビルド設定を"x86"にしていましたが、
　Ver.0.6以降、"Any CPU"でビルドしています


■ライブラリ

PathMakerPlugin.dllがライブラリの本体です
VisualStudioの参照設定から読み込んでください

このフォルダに入っているのはPathMaker.exeと同じフォルダに入っているものと同一ですが、
こちらにはXMLが付属しているので開発がしやすくなります


このライブラリには以下のようなインターフェース、クラス、構造体が定義されています
すべてPathMakerPlugin名前空間上にあります
それぞれの詳細はソースを読んで何とかしてください


・IPlugin インターフェース
　プラグイン側で実装すべきインターフェース
　そう要素数は多くないので実装は面倒ではないです

・IPluginHost インターフェース
　パスメイカー本体で実装しているインターフェース
　このインターフェースを通じてパスメイカー本体にアクセスします
　アクセス可能な要素はあまり多くありません


・VMDFormat クラス
　モーションデータを格納するためのクラス
　VMDファイルの読み書き、ポーズのインポート・エクスポートなどが行えます

・MMDAccess クラス
　MMD本体にアクセスするためのクラス
　今のところ、モデル名のコンボボックスを読み取る機能しかありません


・Point3D 構造体
　主にパス構築の処理に用いられます
　３次元上の点を表します
　無駄に演算子のオーバーロードをしまくっています

・Vector3D 構造体
　主にパス構築の処理に用いられます
　３次元ベクトルを表します
　無駄に演算子のオーバーロードをしまくっています


・Transfer 構造体
　主にVMDFormatクラスで用いられています
　ボーンの移動量などを表します
　Quaternionによる座標変換ができます

・Quaternion 構造体
　主にVMDFormatクラスで用いられています
　いわゆるクオータニオンです
　ボーンの回転などを表します
　EulerAngleとの相互変換ができます

・EulerAngle 構造体
　主にVMDFormatクラスで用いられています
　ZXY系のオイラー角です
　カメラの回転などを表します
　Quaternionとの相互変換ができます


■使用条件

基本的に、一切の制限はありません
プラグインとしてではなく、自作ツールのライブラリとして使ってもかまいませんし、
ソースをコピペして使ってもかまいません
改変も自由です

ただし作者は一切の責任を負いませんので、自己責任でご利用ください

また、今後のバージョンアップでライブラリの仕様が大きく変わる可能性もありますので
ご注意ください

2010/8/1 そぼろ

