///////////////////////////////////////////////////////////////////////////////
//
///////////////////////////////////////////////////////////////////////////////

#include "ikPolishShader.fxsub"
#include "../Commons/Sources/structs.fxsub"
#include "../Commons/Sources/mmdutil.fxsub"
#include "../Commons/Sources/colorutil.fxsub"

// 座標変換行列
float4x4 matV				: VIEW;
float4x4 matP				: PROJECTION;
float4x4 CalcViewProjMatrix(float4x4 v, float4x4 p)
{
	p._11_22 *= GIFrameScale;
	return mul(v, p);
}
static float4x4 matVP = CalcViewProjMatrix(matV, matP);

// マテリアル色
//float4 MaterialDiffuse   : DIFFUSE  < string Object = "Geometry"; >;
float4	MaterialDiffuse = 1;

bool use_texture;

//=============================================================================
// for particle ここから

// 設定ファイル
#include "ikParticleSettings.fxsub"
#include "../Commons/Sources/_calcPosition.fxsub"

// for particle ここまで
//=============================================================================

//-----------------------------------------------------------------------------
// オブジェクト描画

struct VS_OUTPUT {
	float4 Pos			: POSITION;	// 射影変換座標
	float4 TexDistance	: TEXCOORD0;   // テクスチャ + 深度
	float4 Color		: COLOR0;	// ディフューズ色
};

VS_OUTPUT Basic_VS(VS_AL_INPUT IN)
{
	VS_OUTPUT Out = (VS_OUTPUT)0;

	float4 LPos = IN.Pos;
	POSITION_INFO posInfo = CalcPosition(LPos, IN.Tex);
	float4 WPos = posInfo.WPos;

	Out.Pos = mul( WPos, matVP );

	Out.TexDistance = posInfo.Tex;
	Out.TexDistance.z = mul(WPos, matV).z;

	Out.Color = posInfo.Color;

	return Out;
}

float4 Basic_PS(VS_OUTPUT IN, uniform bool bUseTexture) : COLOR
{
	#if IGNORE_TEXTURE == 0
	float4 Color = CalcColor(IN.Color, IN.TexDistance);
	clip(Color.a - AlphaThreshold);
	#endif

	return float4(IN.TexDistance.z, 0,0,1);
}

#define OBJECT_TEC(name, mmdpass) \
	technique name < string MMDPass = mmdpass; \
		string Script = PARTICLE_LOOPSCRIPT_OBJECT; \
	> { \
		pass DrawObject { \
			AlphaTestEnable = FALSE; AlphaBlendEnable = FALSE; \
			CullMode = NONE; \
			VertexShader = compile vs_3_0 Basic_VS(); \
			PixelShader  = compile ps_3_0 Basic_PS(use_texture); \
		} \
	}


OBJECT_TEC(MainTec0, "object")
OBJECT_TEC(MainTecBS1, "object_ss")

technique EdgeTec < string MMDPass = "edge"; > {}
technique ShadowTec < string MMDPass = "shadow"; > {}
technique ZplotTec < string MMDPass = "zplot"; > {}


//-----------------------------------------------------------------------------
