
ikPolishShader 詳説

--------------------------------------------------------------------------------
■ 概要

　ikPolishShaderはPBR(物理ベースレンダリング)風のシェーダーです。
　素材特性をあらわすパラメータを元に、周囲の物体を映りこませることで
　立体感と素材感を出すことができます。

　非力なグラボでは動作しない可能性があります。
　「軽量化のために」の節を参考にしてください。


--------------------------------------------------------------------------------
■ 目次
・使用方法
・ファイルの内容
・材質ファイル
・ikPolishShader.fxsub内の設定
・MMEタブ
・補助ライト
・コントローラ
・軽量化のために
・重くする
・既知の問題


--------------------------------------------------------------------------------
■ 使用方法

□ 最低限必要な設定

　0. モデルを読み込む。
　　※ できるだけ背景を読み込んでください。このエフェクトはモデルに背景を映りこませることを目的としているため、無地の背景ではエフェクトの効果があまり出ません。
　　無地の背景にしたい場合は、適当なスカイドームを追加してMainで非表示にすることも一考してください。

　1. MMDに、ikPolishShader.x を追加する。
　　しばらく時間が掛かる場合があります。
　　数分待っても帰ってこない場合は、「軽量化のために」の節を読んでください。

　2. アクセサリの位置を調整する。
　　初期状態ではアクセサリが地面に埋まっているので、(0, 15, 0)など、適当な位置に調整します。
　　この位置を中心に映り込み用の画像を生成します。

　　カメラやモデルが大きく動く場合は、親指定で、メインのモデルのセンターなどにぶら下げてもよいでしょう。

　3. MMEのエフェクト割り当てを開き、

　3-1. Mainタブで、モデルやステージなどに Main/PolishMain.fx を割り当てる。
　　スカイドームは通常のままにしたほうがよいです。

　3-2. EnvMapタブで、モデルに映りこんで欲しくないものを除外します。
　　メインのモデルは除外したほうがよいです。

　3-3. EnvMapタブで、スカイドームに対して、TEnvMap_emissive.fxを割り当てる。
　　光っているもの、ライトの影響を受けないものにTEnvMap_emissive.fxを割り当てます。
　　※ スカイドームのモデルによっては暗くなりすぎる場合があるためです。

　(4. ikPolishController.pmx を追加する。
　　ikPolishShader のライティング強度を調整するためのコントローラです。
　　無くても動作します。)

　5. アクセサリの描画順序を変更する。
　　パーティクルなどの表示系のエフェクトよりは後に、
　　レンズフレア、色調整、DoFなどより前のほうがいいでしょう。


□ 素材の設定

　1. MMEのエフェクト割り当てを開き、
　　ColorMapRTタブで、モデル・パーツに合った材質を指定する。

　　金属には、Materialフォルダ内のMaterialMap_Metal.fx を、
　　非金属には、MaterialMap.fx (デフォルト)を割り当ててください。

　　スカイドームなど、このシェーダーの影響を受けたくないものには、
　　MaterialMap_Mask.fx を割り当てます。

　2. MaterialMap.fx をカスタマイズする。
　　MaterialMap.fxをコピーペーストして、独自のMaterialMap.fxを作ります。
　　自分の分かりやすい名前に変更したほうがよいでしょう。
　　たとえば、服用であれば、MaterialMap_Cloth.fx など。

　　編集内容に関しては後述の「材質ファイル」を参考にしてください。

　3.  MMEのエフェクト割り当てで、キャラのモデルをサブセット展開し、
　　ColorMapRTタブの服の部分に、先ほど作成した MaterialMap_Cloth.fx を割り当てる。

　　割り当てたあとで MaterialMap_Cloth.fx内のパラメータを変更すると、
　　陰影が変化するのを確認できます。


　最初は、すべての材質を細かく設定するよりも、
　重要な部位に限定して大雑把に設定するほうがよいでしょう。

　たとえば、艦娘であれば顔と体に肌用設定、艤装に金属、
　それ以外はデフォルトのままでバランスを見る。
　それから設定ファイル内のパラメータを調整したり、
　その他の素材に合わせて髪、布、革などを設定していく等。


　4. Mainタブで肌材質に対して、Mainフォルダ内の PolishMain_sss.fx を割り当てる。
　　ライトなどの光らせたい材質に対して、PolishMain_emissive.fxを割り当ててください。


　5. モデルの材質を修正。
　　金属を設定した材質は、モデルデータのスペキュラーカラーに応じて反射色を決定します。
　　(非金属の場合は常に白になります。)

　　モデルによってはスペキュラカラーが低い値になっている場合があるので、
　　PMXエディタなどで明るい色に調整する必要があります。
　　金属の色を明るめに指定してください。
　　金なら黄色、鉄なら50%の灰色など。

　　※ モデルデータを書き換える場合は、オリジナルをバックアップしてから行ってください。

　　材質がマットなほど、自動的にスペキュラが薄くなるため、
　　ハイライトが出にくい材質でも、マットな場合はある程度スペキュラカラーを強くする必要があります。


　6. 反射強度の設定
　　デフォルトのMaterialMapは、モデルデータの反射強度から素材表面の滑らかさを推定します。
　　反射強度が0に近ければマットに、100前後で滑らかな素材とみなしています。

　　ただし、反射強度を調整するより、MaterialMapファイルを書き換えて、
　　直接滑らかさを指定できるようにしたほうが調整は簡単です。

　7. 素材の分離
　　モデルによっては、異なる素材がPMX内で同じ材質に設定されている場合があります。
　　この場合は、PMEエディタなどで素材毎に材質を分離するか、
　　テクスチャで材質を指定する必要があります。


--------------------------------------------------------------------------------
■ ファイルの内容
　(詳細を知る必要がないと思われるファイルは除外しました)

　ikPolishShader.x　　　　アクセサリ
　ikPolishShader.fx　　　 エフェクトファイル
　ikPolishShader.fxsub　　エフェクト間で共有する設定ファイル。
　ikPolishController.pmx　コントローラ。光の強さなどを制御する。無くても動作する。

　Environmentsフォルダ
　　環境マップ用エフェクトファイル

　　MakeEnvMap.x　　　静的な環境マップを作成するアクセサリ。
　　　ステージの見た目とカメラの中心位置が(ほとんど)変化しない場合、
　　　これを使って、環境マップを作成しておくことで、
　　　環境マップの作成処理が省け、高速化できます。

　Mainフォルダ
　　mainタブに割り当てるエフェクトファイル

　　PolishMain.fx　　　Mainタブ用。full.fxの代わりに使用する。

　　PolishMain_sss.fx　　擬似的なSSS処理有効版。
　　　材質設定のSSS値を引き継ぐようになったため、
　　　通常は、材質に関係なくPolishMain.fxで十分です。
　　　肌など視線に応じてエッジに色味を加える場合、PolishMain_sssを利用できます。

　　　肌用にカスタマイズした、PolishMain_sss.fx も用意しました。

　　PolishMain_thinfilm
　　　カーテン、木の葉など薄い材質が逆光で明るくなる場合用の設定です。

　　PolishMain_emissive.fx　光る素材用
　　　PMXには自己発光項(emissive、暗闇でどれだけ光るか。PMXエディタ内では環境光)の設定がありますが、
　　　ほとんどの材質は、実際には光っていないにも関わらず、この値を持っているため、
　　　ikPolishShaderでは基本的にこの項目を無視しています。
　　　本当に光る素材の場合、PolishMain_emissive.fx を使用してください。


　Materialsフォルダ
　　材質設定用のエフェクトファイル群
　　カスタマイズして使用することを前提にしています。

　　MaterialMap.fx　　　　　非金属用(デフォルト)
　　MaterialMap_Metal.fx　　金属用
　　MaterialMap_Mask.fx 　　エフェクトを無効にする。スカイドームに使用する。
　　MaterialMap_Mirror.fx 　鏡っぽい設定。(※ モデル側の材質設定によっては全然映り込まない)
　　MaterialMap_Skin.fx 　　肌用。

　　　基本的には、上記のファイルをコピーし、素材にあわせて改変することを前提にしています。

　　Materials/MaterialMultiMapフォルダ
　　　一括で材質を指定するためのエフェクト(のサンプル)。


　Shadowsフォルダ
　　シャドウマップ用エフェクト

　　Shadow.fxsub 　　　　　　通常はこれを使用する
　　Shadow_distance.fxsub　　距離が近いものの影を無視する。
　　　　　　顔に髪の毛の影を落としたくない場合に使用する。
　　　　　　無視する距離は、Shadow_distance.fxsub内で指定している。
　　Shadow_mask.fxsub　　　　影を無視する。


　Diffuseフォルダ
　　GI風の映り込みエフェクト用
　　DiffuseObject.fx　　　　通常はこれを使用する
　　DiffuseMask.fx　　　　　色を他のモデルに映りこませたくない場合に指定する。


　Sourcesフォルダ
　　エフェクトが内部で使用するファイル


　Supplementsフォルダ
　　マテリアルテスト用のpmxや、スカイドームなど。


--------------------------------------------------------------------------------
■ 材質ファイル

□ 基本的な設定

　Metalness (0.0〜1.0)
　　金属なら1、非金属なら0にする。一応、中間の値も設定できる。
　　金属の上に塗料が塗られている場合、1より小さい値にします。

　Smoothness (0.0〜1.0)
　　表面の滑らかさ。0でマット。1でツルツル。

　　ENABLE_AUTO_SMOOTHNESS が有効な場合、
　　モデルに設定されたスペキュラパワー(反射強度)値から素材の滑らかさを推測します。

　Intensity (0.0〜1.0)
　　映り込み強度。0で映り込まない。1で映り込む。
　　Smoothnessの値を下げると、自動で映り込みの強さが減少します。

　NonmetalF0 (0.0〜1.0)
　　非金属の垂直反射率。非金属の場合の映り込みやすさを指定する。
　　通常は0.05前後の値になります。ダイアモンドでも0.17程度です。

　　金属の垂直反射率は材質に設定されたマテリアルの色と
　　スペキュラカラー(反射色)から適当に決定します。
　　このため、スペキュラーカラーが黒いとほとんど映り込みません。

　　垂直反射率とは：
　　　水面を真上から見下ろしても、水面は周囲の景色をあまり映り込みません。
　　　しかし、水面に水平になるように視線を変えると徐々に水面に周囲が映り込みます。
　　　この現象は机の天板や駅構内の床などでも確認できます。

　　　対して、鏡は角度に(ほぼ)関係なく常に映り込みます。
　　　この角度と映り込み度合いの関係を示すのが垂直反射率になります。
　　　金属は高く、非金属は低い値を取ります。

　SSSValue (0.0〜1.0)
　　皮下散乱度：肌などの半透明なものに指定。0:不透明。1:半透明。
　　金属の場合は無視される。

　　大きな値ほど、陰影計算の結果をボカします。
　　やり過ぎるとゴムや蝋燭のような質感になるので注意が必要です。


　まとめ
　　金属? あるいは金属っぽい質感 → Metalness を 1に。
　　それ以外 → Metalness を 0にする。

　　デフォルト設定だとツルツルすぎる or 逆にもっとツヤツヤにしたい。→
　　ENABLE_AUTO_SMOOTHNESS をコメントアウト。

　　ツルツルな素材?
　　　すごくツルツル。 → Smoothness を 0.8にする。
　　　そこそこツルツル → Smoothness を 0.6くらいに。
　　　マット → 0.2くらいにしてみる。
　
　　映り込みが強すぎる → Smoothness を下げてみる。
　　　まだ明るい？ → Intensityの値を下げてみる。


□ 他シェーダーの設定の利用

　USE_AUTOREFLECTION_SETTINGS
　　AutoReflectionの材質設定から材質の値を決定する。

　　※ AutoReflectionシェーダー用に設定されたモデルで動作チェックしていません。


　USE_NCHL_SETTINGS
　　NCHLシェーダーの材質設定を利用する。
　　スフィアマップのテクスチャのrgbを法線マップに、aをスペキュラマップとして扱う。

　　NCHL_ALPHA_AS_SMOOTHNESS　スペキュラ値をスムースネスとして使う。
　　NCHL_ALPHA_AS_INTENSITY　　スペキュラ値を映り込み強度として使う。
　　　片方のみを指定することも、両方指定することも可能です。
　　　どちらも指定しない場合、法線マップのみ利用して、aチャンネルの情報は捨てられます。

　　※ 設定用テクスチャが、スフィアマップとして描画されないように、
　　　NCHLの設定がされたモデルに割り当てる PolishMain.fx の
　　　IGNORE_SPHERE を有効にする必要があります。

　　※ スペキュラカラー(鏡面反射色)に設定されたパラメータは基本的に無視されます。


□ 材質マップ指定

　USE_MATERIALMAP
　　材質マップを使用する。

　MATERIALMAP_MAIN_FILENAME
　　材質マップの名前を指定する。
　　材質マップのr,g,b,a には、それぞれ
　　Metalness、Smoothness、Intensity, SSSが格納されているものとします。

　MaterialMapLoopNum
　　材質マップの繰り返し回数。
　　通常のカラーテクスチャと1:1対応するなら、1を指定する。
　　汎用の材質マップを割り当てる場合は、密度に応じて適宜調整してください。


　USE_SEPARATE_MAP
　　1枚テクスチャにつき、1つの情報を指定する。
　　USE_MATERIALMAPが無効でも、マップファイルを参照します。

　METALNESSMAP_FILENAME
　　メタルネス用のテクスチャを指定する。
　　行頭に//をつける(コメントアウトする)と、メタルネスマップを使用しません。
　　この場合、Metalness = ** で指定した値が使用されます。

　　テクスチャの値は、赤(R)チャンネルの値が使用されます。

　MetalnessMapLoopNum
　　メタルネスマップの繰り返し回数を指定する。

　SMOOTHNESSMAP_FILENAME
　INTENSITYMAP_FILENAME
　SSSMAP_FILENAME
　　それぞれ、スムースネス、映り込み強度、SSSマップを指定する。

　　機能はメタルネスマップと同様。
　　分割時は、常に赤(R)チャンネルの値が使用される点に注意してください。


□ 法線マップ指定

　USE_NORMALMAP
　　法線マップを使用する。
　　USE_NCHL_SETTINGS と併用する場合、メイン法線はNCHLのものが優先されます。

　NORMALMAP_MAIN_FILENAME
　　メイン法線マップ名
　NormalMapMainLoopNum
　　メイン法線マップの繰り返し回数
　NormalMapMainHeightScale
　　メイン法線マップの高さ補正。正の値で高くなる。0で平坦。

　NORMALMAP_SUB_FILENAME
　NormalMapSubLoopNum
　NormalMapSubHeightScale
　　サブ法線マップ(微細な凹凸用)。詳細はメイン法線マップを参照。


--------------------------------------------------------------------------------
■ ikPolishShader.fxsub内の設定

　主要なもののみを列挙

　RLRRayCount
　　映り込むものを調査する回数。多いほど正確で重い。
　　映り込むものが少ない場合は0にして無効にしたほうが軽くなります。

　SSAORayCount
　　奥まった部分に光が届くかどうか調査する回数。
　　多いほど正確で重い。0で無効。

　RSMCount
　　床や壁からの照り返しを計算するかどうか。その精度。
　　0で無効。16〜64で計算回数。大きい値ほど正確で重くなる。

　ENABLE_SSGI
　　ぼんやりした映り込みを行うかどうか。
　　白いシャツに周りの色が映り込むような効果。

　ENABLE_AA
　　簡易アンチエイリアスを有効にするかどうか。
　　ポリゴン境界での計算ミスを目立たなくする効果があります。
　　その他のアンチエイリアスエフェクトを使う場合は、無効にしたほうがよいでしょう。

　SHADOW_QUALITY
　　シャドウマップのクオリティを調整する。
　　大きい数字ほどクオリティが高く、重くなる。

　SSAO_QUALITY
　　凹み部分を暗くする影のクオリティを調整する。
　　大きい数字ほどクオリティが高く、メモリを消費する。

　USE_STATIC_ENV
　　あらかじめ作成した環境マップファイルを指定する。
　　毎フレーム環境マップを生成しないことで、高速になります。


--------------------------------------------------------------------------------
■ MMEタブ

　ikPolishが使用するタブの説明

　Main
　　通常の描画を行うためのMMD標準のタブ
　　ikPolishで描画する対象にはMainフォルダ内にあるエフェクトを割り当てる。
　　ikPolishShaderで事前に計算された情報を元に色を決定する。

　　スカイドームに陰影がつくと見た目がおかしくなるので、
　　スカイドームにはikPolish用のエフェクトを割り当てないほうがよいです。

　ColorMapRT
　　モデルの材質情報など計算に必要な情報を書き出す。
　　各材質に従って、Materialsフォルダ内のエフェクトを割り当てる。
　　エフェクトは材質毎にカスタマイズする。

　EnvMapRT
　　鏡のようなモデルに映り込む画像を作成する。

　　メインのキャラが自分自身に映り込むと汚くなるので、
　　デフォルトで.pmx,.pmdは除外される。背景が.pmxなどの場合、
　　手動で描画対象にする必要がある。

　　街灯、空(スカイドーム)などMMDのライトの影響を受けないと思われる材質には、
　　TEnvMap_emissive.fxを割り当ててください。

　ShadowMapRT
　　シャドウマップを計算する。

　LightMapRT
　　シャドウマップ用にライトからの距離を計算する。
　　このタブでチェックを外したモデルは影を落とさなくなる。

　SSGIMapRT
　　淡い映り込みを表現するための画像を作成する。

　RSMLightMapRT
　　MMDライトの床や壁での反射を計算するための情報を出力する。


--------------------------------------------------------------------------------
■ 補助ライト

　PointLight1.x 〜 PointLight3.xで簡易のポイントライトを追加できます。
　Rx,Ry,Rzで色を指定。0〜10程度。
　Siで影響範囲を指定。
　Trで強度を指定。
　　　Trを0.5にするのと、Rxyzの値を半分にするのは同じ意味になります。

　　BeammanPのMechanic v6を参考にしました。


--------------------------------------------------------------------------------
■ コントローラ

　※ コントローラを使用しない場合、すべての項目で0をしたのと同じ結果になります。

　直接光+/-　　ライトからの光の強弱を調整する。
　間接光+/-　　アンビエント項(空の色などの周囲からの影響)の強弱を調整する。
　SSAO+/-　　　SSAO(隅や狭まった部分を暗くする効果)の強さを調整する。
　SSAOバイアス　SSAO由来のノイズが出る場合に調整する。
　映り込み+/-　　鏡面反射による映り込みの強さを調整する。
　SSS+/-　　　半透明な物体で光が滲む効果を調整する。肌の透明感に影響する。
　GI+/-　　　拡散反射による映り込みの強さを調整する。

　　※ SSAO以外を+にし過ぎると、陰/影の部分まで明るくなって立体感が失われます。


--------------------------------------------------------------------------------
■ 軽量化のために

　次節の「重くする」にも軽量化の方法を記述してあります。

　ikPolishShader.fxsub内の
　　RLRRayCount
　　SSAORayCount
　の値をそれぞれ 8まで下げてみる。それでも駄目なら0にしてみる。

　　0を指定した場合、根本的に計算を省略します。
　　このため、0と1以上で、速度が大きく違います。
　　2や3程度の低い値を設定しても効果が薄いので、いっそ0にしたほうがよいです。

　　RLRは自分の近くのものが映りこむかどうか判定するもの。
　　SSAOは自分の近くのもので光が遮られるかどうか判定するものです。


　ikPolishShader.fxsub内の
　　ENABLE_SSS_THICK
　　ENABLE_SSGI
　の値を0にする。


　静的な環境マップを利用する。
　　Environments内の MakeEnvMap.x を使うとikPolishShader用の環境マップを表示できる。

　　ikPolishShader.xの位置に、MakeEnvMap.xを置き、
　　画面サイズ1024x512で画像を出力します(デフォルトの設定時)。

　　ikPolishShader.fxsub内のUSE_STATIC_ENVの行頭の//を取り除き、
　　出力した画像を指定すると、毎フレーム環境マップを生成する代わりに、
　　指定した画像を環境マップと使用するようになります。


--------------------------------------------------------------------------------
■ 重くする

　軽量化とは逆に速度を犠牲にしてもクオリティを向上させる方法。


　MMDメニューの出力サイズを縦横倍にする。
　　出力後にAviUtlや画像編集ソフトで動画/画像サイズを小さくする。


　ikPolishShader.fxsub内のSHADOW_QUALITY を2にする。
　　シャドウマップの精度が上がる。
　　(1にすると軽くなる。)

　ENV_WIDTH を1024にする。
　　映り込み画像の精度が上がる。
　　鏡のようにSmoothnessの高い大きな平面がある場合には効果がある。
　　(256にすると多少軽くなる。)

　RLRRayCountを128程度にする。
　　映り込み画像の精度が上がる。
　　(0にすると軽くなる。)


--------------------------------------------------------------------------------
■ 既知の問題

　半透明を正しく扱うことができません。
　→ ikPolishShader.fxsub 内の AlphaThreshold の値を変更すると改善できる場合があります。


　目が暗くなる。
　→ MMDモデルによっては白目が現実の目玉のように凸状の球体ではなく、
　　凹状の眼窩になっている場合があります。
　　ikPolishはその形状のまま陰影計算を行うために、影が落ちて暗くなります。

　　本来の目の形状をした球または楕円を目のある部分に配置して、
　　Mainタブから消すことで陰影計算をこの仮の球で行わせることができます。

　　瞼を閉じたときに、この仮の白目がはみ出さないように、目を閉じたときだけ奥に引き込む
　　などの処理が必要になる場合があります。


ikeno
Twitter: @ikeno_mmd
