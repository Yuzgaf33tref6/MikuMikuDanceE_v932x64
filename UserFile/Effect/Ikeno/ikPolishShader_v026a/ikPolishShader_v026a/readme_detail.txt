
ikPolishShader 詳説

--------------------------------------------------------------------------------
■ 概要

ikPolishShaderはPBR(物理ベースレンダリング)風のシェーダーです。
素材特性をあらわすパラメータを元に、周囲の物体を映りこませることで
立体感と素材感を出すことができます。

古いバージョンでの説明になりますが、使用方法やパラメータの設定について説明しています。
http://ch.nicovideo.jp/ikeno/blomaga/ar745854
http://www.nicovideo.jp/watch/sm27733338
http://www.nicovideo.jp/watch/sm27742363
　※ 仕様変更のため、現在とは挙動が異なっている場合があります。

ver0.24で追加・変更した機能については[v24]の印が付けてあります。
ver0.25で追加・変更した機能については[v25]の印が付けてあります。
ver0.26で追加・変更した機能については[v26]の印が付けてあります。


--------------------------------------------------------------------------------
■ 目次
・使用方法
・ファイルの内容
・ikPolishShader.fxsub内の設定
・材質ファイル
・mainファイル
・MMEタブ
・追加ライト
・フォグ [v24]
・平面反射
・コントローラ
・軽量化のために
・重くする
・トラブルシューティング
・既知の問題


--------------------------------------------------------------------------------
■ 使用方法

□ 少しだけ細かい設定

0. モデルを読み込む。
　※ できるだけ背景を読み込んでください。このエフェクトはモデルに
　背景を映りこませることを目的としているため、無地の背景ではエフェクトの効果が出ません。
　無地の背景にしたい場合は、ライティング用に適当なスカイドームを追加してMainで非表示にすることを一考してください。

1. MMDに ikPolishShader.x を追加する。
　しばらく時間が掛かる場合があります。
　時間が掛かりすぎる場合は、「軽量化のために」の節を読んでください。

2. MMEのエフェクト割り当て：
2-1. Mainタブで、モデルやステージなどに Main/PolishMain.fx を割り当てる。
　※ スカイドームには割り当てないでください。

2-2. EnvMapタブで、モデルに映りこんで欲しくないものを除外する。

2-3. EnvMapタブで、スカイドームに対して、Environments/TEnvMap_emissive.fxを割り当てる。
　光っているもの、ライトの影響を受けないものにTEnvMap_emissive.fxを割り当てます。
　※ HDRから変換したスカイドームを使用している場合は、TEnvMap_rgbm.fxを割り当ててください。
　※ rgbm_skydome.xを使用している場合は、自動でTEnvMap_rgbm.fxが割り当てられます。

3. アクセサリの描画順序を変更する。
　パーティクルなどの表示系のエフェクトよりは後に、
　レンズフレア、色調整、DoFなどより前のほうがいいでしょう。

4. ikPolishController.pmx を追加する。
　表情モーフでikPolishShader の動作を調整するためのコントローラです。
　無くても動作します。

5. MMDのアンチエイリアス (表示メニュー > アンチエイリアス)を切る。
　※ この機能は美影と同じで、MMDを再起動すると有効状態にリセットされます。

6. supplements/ikLinear内の ikLinearEnd.xを追加する。
　画面全体の明るさを調整する機能、エッジを滑らかに見せる機能があります。
　ikPolishController.pmxで、パラメータを調整可能です。
　※ 色味が変わって見える場合があるため、気に入らない場合は外してください。
　※ 詳細については、ikLinearフォルダ内のドキュメントも参照してください。



□ 素材の設定

1. 材質にあったマテリアルを設定する。
　MMEのエフェクト割り当てで、ColorMapRTタブを選択し、
　キャラのモデルをサブセット展開します。
　各材質にあったマテリアルを設定します。

　モデル全体で同じ材質の場合は、サブセット展開は不要です。

　金属には、Materialフォルダ内のMaterial_Metal.fx を、
　顔にはMaterial_face.fx、体にはMaterial_skin.fx
　を割り当ててください。

　スカイドームなど、このシェーダーの影響を受けたくないものには、
　Material_Mask.fx を割り当てます。
　※ HDR2RGBMで変換したスカイドームには、自動でMaterial_Mask_HDR.fxが
　　割り当てられます。

　他のエフェクトのコントローラなど、描画に関係ないモデルは
　表示チェックを外します。


2. Material.fx をカスタマイズする。
　Material.fxをコピーペーストして、独自のMaterial.fxを作ります。
　自分の分かりやすい名前に変更したほうがよいでしょう。
　たとえば、服用であれば Material_Cloth.fx など。

　編集内容に関しては後述の「材質ファイル」を参考にしてください。

3. モデルの反射色、反射強度を修正。
　MMDのモデルでは、スペキュラが弱めに設定されていることが多いので、
　必要に応じて、PMXエディタなどで反射強度を調整する必要があります。

　※ モデルデータを書き換える場合は、オリジナルデータのバックアップを取ってから行ってください。

　ハイライトの強さは、マテリアルファイルでも指定可能です。


　金属材質の場合、モデルに設定された反射色を参照します。
　MMDのモデルでは反射色が黒(0,0,0)に設定されている場合、
　適宜設定しなおす必要があります。
　非金属の場合は、反射色が常に白(1,1,1)とみなされます。

　ハイライトの色も、マテリアルファイルで指定可能です。


5. 素材の分離
　モデルによっては、異なる素材がPMX内で同じ材質に設定されている場合があります。
　例：脚とタイツ、靴が一体化している。

　この場合は、PMXエディタなどで素材毎に材質を分離するか、
　材質テクスチャで材質を指定する必要があります。


--------------------------------------------------------------------------------
■ ファイルの内容
　(詳細を知る必要がないと思われるファイルは除外しました)

　ikPolishShader.x　　　　アクセサリ
　ikPolishShader.fx　　　 エフェクトファイル
　ikPolishShader.fxsub　　エフェクト間で共有する設定ファイル。
　ikPolishController.pmx　コントローラ。光の強さなどを制御する。無くても動作する。

　Environmentsフォルダ
　　環境マップ用エフェクトファイル

　　TEnvMap.fx　　通常のオブジェクト用
　　TEnvMap_emissive.fx
　　　陰影計算をしないオブジェクト用。スカイドーム、自己発光している物など。
　　TEnvMap_rgbm.fx
　　　HDRIテクスチャを使用したスカイドーム用。

　FogSettingsフォルダ [v24]
　　ボリュームフォグ用の設定ファイル

　Lightsフォルダ
　　追加ライト用の.pmxと関連エフェクトファイル。
　　追加ライトは、ikPolishShader.fxsub で EXTRA_LIGHTS 1の場合だけ有効。

　Mainフォルダ
　　mainタブに割り当てるエフェクトファイル

　　PolishMain.fx　　　Mainタブ用。full.fxの代わりに使用する。
　　PolishMain_glass.fx　ガラス用。半透明でもハイライトが強く出る。
　　PolishMain_clearcoat.fx　ツルツルな材質用
　　　ワックスを塗った車のようになる。
　　PolishMain_hair.fx　髪の毛用。ハイライトの計算が特殊。

　　forward_glass.fx　ガラス用2
　　　全体的に半透明な材質に使用することで、その材質の奥の材質を有効にする。
　　　※ ikPolishは一番手前の材質情報しか保存しないため、手前に半透明な材質があると
　　　その背後の材質は無効になります。

　　　ガラス材質をColorMapRTから外して、mainでこのファイルを割り当てると、
　　　ガラスの背後を通常のPolishの光源計算で処理し、ガラスに対して擬似的な反射を追加する。

　　内容の詳細については後述の「mainファイル」を参考にしてください。

　Materialsフォルダ
　　材質設定用のエフェクトファイル群
　　カスタマイズして使用することを前提にしています。
　　※ Materialsファイルを別フォルダに移す場合、Materials/Sourcesフォルダ以下もコピーする必要があります。

　　Material.fx　　　　　非金属用(デフォルト)
　　Material_mask.fx 　　エフェクトを無効にする。スカイドームに使用する。
　　Material_metal.fx　　金属用
　　Material_skin.fx 　　肌用。
　　Material_face.fx 　　顔用。Material_skinより影の影響が弱い。
　　Material_leaf.fx 　　葉っぱ、一部の布用。裏側から光が透過する材質用。
　　Material_light.fx　　追加ライト用。

　　内容については後述の「材質ファイル」を参考にしてください。

　Sourcesフォルダ
　　エフェクトが内部で使用するファイル

　Supplementsフォルダ
　　マテリアルテスト用のpmxや、スカイドームなど。


--------------------------------------------------------------------------------
■ ikPolishShader.fxsub内の設定

　主要なもののみを列挙

　QUALITY_LEVEL
　　一括での品質レベル設定。
　　0が精度を下げて速度を上げる。2が速度を落として品質を上げる。
　　3は細かく設定を変更する場合用。

　SHADOW_QUALITY
　　シャドウマップのクオリティを調整する。
　　大きい数字ほどクオリティが高く、重くなる。

　ENABLE_LSM
　　スクリーンスペースで細かい影を描画する。

　RLRRayCount
　RLRRayCount2
　　映り込むものを調査する回数。多いほど正確で重い。
　　映り込むものが少ない場合は0にして無効にしたほうが軽くなります。

　SSAORayCount
　　奥まった部分に光が届くかどうか調査する回数。
　　多いほど正確で重い。0で無効。

　RSMCount
　　床や壁からの照り返しを計算するかどうか。その精度。
　　0で無効。16〜64で計算回数。大きい値ほど正確で重くなる。

　ENABLE_SSGI
　　鈍い映り込みを行うかどうか。
　　白いシャツに周りの色が映り込むような効果が出る。

　SSAO_QUALITY
　　凹み部分を暗くする影のクオリティを調整する。
　　大きい数字ほどクオリティが高く、メモリを消費する。

　EXTRA_LIGHTS
　　追加ライトに対応する。
　　ここで0を指定すると、追加ライトが使えない代わりに多少高速化する。

　FOG_TYPE (旧 ENABLE_FOG) [v24]
　　0でフォグ無効。
　　1で擬似的な空気遠近を有効にする。
　　2でボリュームフォグを有効にする。重い。
　FOG_QUALITY
　　FOG_TYPE 2の場合のクオリティを設定する。1-2。数字が大きいほど綺麗で重い。

　REFRACTION_TYPE
　　[v25] ENABLE_REFRACTION から変更。
　　擬似的な屈折表現とすりガラス効果を有効にする。
　　0で屈折表現無効。
　　1で簡易版
　　2で高品位版。

　PLANAR_REFLECTION
　　平面反射を有効にする。WorkingFloor相当。
　ENABLE_REFLECTION_SHADOW
　　平面反射でシャドウマップの計算を行うかどうか。

　ThicknessScale [v26] 変更
　　SSS材質(肌など)の明るさを調整するパラメーター

　　v0.26以前は影の元との距離によって変動していたが、
　　影との距離に関係なくSSS材質の明るさを調整するようになった。


　[v25] 廃止。MIRROR_CONTROLER
　　平面反射の基準位置を調整するコントローラ名
　　コントローラの「平面反射」ボーンで指定するように変わった。


--------------------------------------------------------------------------------
■ 材質ファイル

ColorMapRTタブ に設定するMaterial.fxファイル内のパラメータについて。
Material.fxファイルは、Materialsフォルダ内にいくつかのプリセットがあります。

各パラメータの挙動については、supplements/MaterialTester にある、
MaterialTester.pmx で確認することができます。


□ 基本的な設定

　MATERIAL_TYPE
　　材質の特性を指定する。

　　MT_NORMAL　: 通常 (金属を含む)
　　MT_FACE　　: 肌 (顔用)
　　MT_LEAF　　: 葉やカーテンなど、裏が透ける材質用。
　　　現在は肌もここに属している。実際の人間は鼻や耳など骨がない部分でだけ透ける。 
　　MT_MASK　　: スカイドーム用。

　TEXTURE_FILENAME_*
　　材質をテクスチャで指定する場合のテクスチャファイル名。最大で4つまで指定可能。

　METALNESS (0.0〜1.0)
　　金属度。
　　金属なら1、非金属なら0にする。宝石類では0.1〜0.2程度を指定する。
　　金属の上に塗料が塗られている場合、1より小さい値にする。
　　光沢がある材質の場合、非金属でも0.1〜0.2程度を指定することがある。

　SMOOTHNESS (0.0〜1.0)
　　表面の滑らかさ/ザラつき度合い。
　　SMOOTHNESS_TYPEによって値の意味が変わる。

　EMISSIVE (0.0〜8.0)
　　発光強度。
　　EMISSIVE_TYPEによって、発光量の算出方式が変わる。
　　※ 皮下散乱度とともに使用できない。

　SSS (0.0〜1.0)
　　皮下散乱度。(Sub-Surface Scattering)
　　肌、半透明なプラスチックなどで透ける度合いを指定する。0:不透明。1:半透明。
　　※ 発光度とともに使用できない。発光度がある材質では、皮下散乱度は無視される。

　INTENSITY (0.0〜2.0)
　　ハイライト強度
　　ハイライトの強さを設定する。0でハイライトオフ。

　　INTENSITY_TYPE
　　　0: スペキュラの強度を設定する
　　　1: 間接光の遮蔽度を設定する。値が0のとき間接光は完全に遮蔽される。
　　　　　AO(Ambient Occlusion)相当。
　　　2: 全ライティングの遮蔽度を設定する
　　　3: 全ライティングの遮蔽度を設定する(視線依存)


□ テクスチャによる各パタメータの設定：

　xxx_VALUE
　　テクスチャを使用せず、材質単位で値を一括指定する場合の数値。

　xxx_MAP_ENABLE
　　テクスチャで値を指定するかどうか。
　　0ならxxx_VALUEの値が使われ、1なら以下で指定したテクスチャの値が使われる。

　xxx_MAP_FILE
　　テクスチャファイル番号。
　　TEXTURE_FILENAME_* の 末尾の数字で参照するテクスチャファイルを指定する。

　xxx_MAP_CHANNEL
　　テクスチャのチャンネルを指定。
　　Rなら赤、G,B,Aならそれぞれ、緑、青、透明度の値を使用する。

　xxx_MAP_LOOPNUM
　　テクスチャの繰り返し回数。
　　カラーテクスチャと大きさが一致している場合は1を指定する。
　　1.0以上の値を指定することで、テクスチャが細かくなる。

　xxx_MAP_SCALE
　xxx_MAP_OFFSET
　　テクスチャ値の係数。
　　「テクスチャの値 × SCALE ＋ OFFSET」が最終的な値になる。


□ 補助設定

　AlphaThreshold
　　半透明の材質の無視するしきい値
　　これより小さい透明度の場合、無視される。


□ 法線マップ指定

　NORMALMAP_ENABLE
　　法線マップを使用する。0:未使用。1:使用する。

　NORMALMAP_SUB_ENABLE
　　サブ法線マップを使用する。0:未使用。1:使用する。
　　※ NORMALMAP_ENABLE が 0の場合、NORMALMAP_SUB_ENABLEの値に無関係に法線マップは使用できません。


　NORMALMAP_MAIN_FILENAME
　　メイン法線マップ名

　NORMALMAP_MAIN_LOOPNUM
　　メイン法線マップの繰り返し回数

　NORMALMAP_MAIN_HEIGHT
　　メイン法線マップの高さ補正。
　　正の値で高くなる。0で平坦。負の値も指定可能。

　NORMALMAP_MAIN_FLIP [v25]
　　法線の向きを反転させます。
　　DirectX用に作られた法線マップと、OpenGL用に作られた法線マップでは、
　　色と方向の関係が違います。その場合、FLIP指定で正しい向きすることが可能です。

　　法線マップで出っ張っている部分がへこんで見える場合は、
　　DirectX用に作成された法線マップで、FLIP_XYかFLIP_Yを指定する必要があります。

　　モデルの左右で凹凸の向きが違う場合は、NORMALMAP_FLIP_VERTICAL の項を
　　参照してください。


　NORMALMAP_SUB_FILENAME
　NORMALMAP_SUB_LOOPNUM
　NORMALMAP_SUB_HEIGHT
　NORMALMAP_SUB_FLIP
　　サブ法線マップ(微細な凹凸用)。詳細はメイン法線マップを参照。


　NORMALMAP_FLIP_VERTICAL [v26]
　　テクスチャを上下反転して使用するモデルなら1にする。
　　法線マップ使用時に左右で凹凸の向きが入れ替わるとき、
　　1にすることで改善できる場合がある。

　　左右対称のモデルで、UVを左右反転することでテクスチャを半分に済ませることがある。
　　このとき、テクスチャも左右反転させることが多いが、
　　まれに上下反転させている場合がある。

　　なお、左右で反転ではなく、左右ともに向きが反転している場合は、
　　NORMALMAP_MAIN_FLIPで凹凸を反転させることができる。


　DISABLE_ALIGNMENT_CORRECTION [v26]
　　法線マップ計算時に向きの補正を抑制する。

　　法線マップ使用時だけライティングがおかしくなる場合、
　　これを1にすることで改善できることがある。


□ 深度マップ指定 [v25]

　PARALLAX_ENABLE
　　深度マップを使用する。0:未使用。1:使用する。

　PARALLAX_FILENAME
　　深度マップ名
　　白い部分が高く、黒い部分が低い。

　PARALLAX_LOOPNUM
　　深度マップの繰り返し回数

　PARALLAX_HEIGHT		1.0
　　深度の調整量(mmd単位)
　　深度マップでの0-1が、mmdでどれくらいの高さに相当するのかを指定。

　PARALLAX_LENGTH
　　テクスチャ上での参照距離
　　(参照ピクセル/テクスチャサイズ)を指定する。

　　例：テクスチャ全体が 1x1m2程度を表すとしたら、
　　　10mm (≒1mmd) / 100mm = 0.1を指定する。

　　PARALLAX_LENGTH x テクスチャサイズが、次項のPARALLAX_ITERATION と
　　比べて大きすぎると精度が足りなくなる。
　　上記の例でテクスチャサイズが512ピクセルの場合、
　　参照範囲は51ピクセルになる。PARALLAX_ITERATION が8なら、
　　大雑把に言って、6ピクセル飛ばしに検索することになる。

　PARALLAX_ITERATION
　　検索回数
　　高さを何回検索するか。多いほど精度は上がるが重くなる。


--------------------------------------------------------------------------------
■ mainファイル
　※ v.0.20からmainでの指定を大幅に簡略化しました。

□ PolishMain 系

　ENABLE_VELVET
　　ベルベット効果を有効にするか。
　　輪郭を明るくする。

　　VELVET_***_COLORが、正面から見た場合の色、VELVET_***_RIM_COLORが
　　視線と垂直になっている部分の色になる。

　　(元の色 * VELVET_MUL_***) + VELVET_ADD_*** で材質の色が決定され、
　　そこにライティングが行われる。


　ENABLE_CLEARCOAT
　　クリアコート表現を有効にする。
　　マテリアルで指定したスペキュラに追加して、第二のスペキュラを与えることができる。

　ENABLE_HAIR_SPECULAR
　　擬似的な髪の毛用のハイライト計算を有効にする。


　IGNORE_SPHERE
　　完全にスフィアマップを無視する
　SphereScale
　　スフィアマップの強さを調整する。

　ENABLE_SPECULAR_ALPHA
　　半透明モデルでもスペキュラの強度を維持する。
　　通常、半透明度に応じてハイライトは弱くしますが、ガラスなどで半透明な材質でも
　　光の反射を強くしたい場合、1を指定します。


　ToonColor_Scale
　　影の色を ToonColor の設定に従って変調する度合。

　Enable_Cutout
　　指定したアルファ値の以上か以下かで表示のオン/オフを決定する。
　　葉っぱなどのテクスチャでエッジが汚くなる場合に使用すると改善できる。


　USE_ALBEDO_MAP [v25]
　　材質指定で使用した色を使う。

　　POM(視差遮蔽マッピング)を使うとテクスチャの参照位置がズレるため、
　　元の位置の色を使うとおかしなことになります。
　　このため、デフォルトで材質指定で使用した色を使うように変更しました。
　　POMを使わない場合は、0でも問題ありません。

　　なお、半透明度がほしい場合は、USE_ALBEDO_MAPを0にすることで、
　　従来通りテクスチャから色を拾う必要があります。


□ forward 系

　forward_glass.fxは半透明表現用のシェーダーです。

　ikPolishは1ピクセルに1つの材質情報しか保存しないため、
　半透明な材質が手前にあると、その奥にある材質が正しく描画されません。

　ガラスのように完全に半透明な材質を描画する場合、
　ColorMapRT, SSAOMapRTから除外して、Mainでforward_glassを割り当てることで、
　半透明な材質の奥にある物体が正しく描画されます。

　代わりにforward適用部分が不正確になります。
　半透明部分を優先させる場合は従来通りの設定を使ってください。


　[v25]
　forward_glass.fx にマテリアル情報を設定できるようにしました。
　スムースネスマップ、法線マップ、高度マップを指定できます。


　SURFACE_ABSORPTION_RATE [v25]
　BODY_ABSORPTION_RATE [v25]
　　半透明色による背後の色の吸収率を設定します。
　　0〜1で高い値ほどモデルの色の影響を受けます。

　　SURFACEは表面で一律に吸収する割合です。
　　BODYは厚みによって変化する吸収度合です。


　THICKNESS_TYPE [v25]
　　厚みの計算方法


□ その他

　ver.0.22から、ikLinearEndがポストプロセス機能を受け持つようになりました。
　このため、非ikPolish系のシェーダーも適宜対応が求められるます。
　これはikLinearBeginを使用せずに、ikLinearEndだけを使うための処置なので、
　ikLinearEndを使用しない(またはikLinearBeginと併用する)場合は、
　通常のシェーダーを割り当てればよいです。

　HDRIスカイドームである、rgbm_skydomeはrgbm_skydome.fxのままでよいです。
　通常のスカイドームにはMain/ldr_skydome.fx またはfull_linear.fx を割り当ててください。
　full_linearはikLinearに対応した、full.fxの改造版。
　ldr_skydomeはスカイドーム用に不要な処理を廃したfull_linear。


--------------------------------------------------------------------------------
■ MMEタブ

　ikPolishが使用するタブの説明

　Main
　　通常の描画を行うためのMMD標準のタブ
　　ikPolishで描画する対象にはMainフォルダ内にあるエフェクトを割り当てる。
　　ikPolishShaderで事前に計算された情報を元に色を決定する。

　　rgbm_skydomeはrgbm_skydome.fxのままでよい。
　　通常のスカイドームにはMain/ldr_skydome.fxを割り当てる。
　　forward_***.fxはガラスなどの透明なモデル用。
　　詳細は「mainファイル」の項目を参照。

　LightMapRT
　　追加ライトの計算用エフェクトを指定する。
　　基本的には自動で対応するエフェクトが割り当てられる。
　　追加ライト以外にチェックが付いている場合は外してください。

　　シャドウマップ対応などの設定を変更したい場合は、
　　Lights/PL_xxx.fxを変更するか、複製を作って改造する。

　ColorMapRT
　　モデルの材質情報など計算に必要な情報を書き出す。
　　各材質に従って、Materialsフォルダ内のエフェクトを割り当てる。
　　エフェクトは材質毎にカスタマイズする。
　　詳細は「材質ファイル」の項目を参照。

　EnvMapRT
　　鏡のようなモデルに映り込む画像を作成する。
　　デフォルトで.pmx,.pmdは除外される。
　　背景が.pmxファイルの場合、手動で描画対象にする必要がある。

　　街灯、空(スカイドーム)などMMDのライトの影響を受けないと思われる材質には、
　　TEnvMap_emissive.fxを割り当ててください。


　RSMMapRT (Reflective Shadow Map)
　　MMDライトの床や壁での反射を計算するための情報を出力する。
　　基本的には自動で対応するエフェクトが割り当てられる。

　SSAOMapRT (Screen Space Ambient Occlusion)
　　SSAO用の深度を設定する。
　　基本的には自動で対応するエフェクトが割り当てられる。

　LightDepthRT
　　シャドウマップ用にライトからの距離を計算する。
　　基本的には自動で対応するエフェクトが割り当てられる。
　　このタブでチェックを外したモデルは影を落とさなくなる。

　PlanarReflectionMapRT
　　平面反射用の情報を書き出す。


　※ ikPolishが対応していなさそうなエフェクト類は、Mainタブ以外からは
　チェックを外したほうが無難です。いわゆる連凧のような現象が発生します。


--------------------------------------------------------------------------------
■ 追加ライト

　※ ikPolishShader.fxsub内の EXTRA_LIGHTS が0になっていると使用できません。

　Lightsフォルダ内のPointLight.pmx、SpotLight.pmx、SphereLight.pmx、PanelLight.pmx
　をmmdに入れてください。

　同じライトを複数同時に使用することができます。
　各.pmxの表情モーフで設定を行うことができます。


□ 各ライトについて

　PointLight.pmx
　　ポイントライト。

　SpotLight.pmx
　　スポットライト。懐中電灯などのように特定方向だけを照らすライト。
　　割り当ててあるテクスチャを変更することで光の形状を変更できる。

　SphereLight.pmx
　　大きさのある球形ライト。
　　割り当ててあるテクスチャを変更することで光の形状を変更できる。
　　mainには、PolishMain_light.fx を割り当てる。

　PanelLight.pmx
　　大きさのある矩形のライト。
　　割り当ててあるテクスチャを変更することで光の形状を変更できる。
　　mainには、PolishMain_light.fx を割り当てる。

　TubeLight.pmx
　　細長いライト。
　　mainには、PolishMain_light.fx を割り当てる。

　※ 影を落とす場合、PointLight、SphereLight、TubeLightは全方向に影を落とす
　　必要があるため重くなります。SpotLight、PanelLightで代用できる場合は、
　　そちらを使うほうが高速になります。


□ ファイルによる設定

　Lightsフォルダ内のPL_**.fx内で各ライトのシャドウマップの設定などを変更できます。

　EnableShadowMap
　　シャドウマップを有効にする。

　EnableLighTexture
　　ライトの明るさにテクスチャ色を適用する。
　　各追加ライトはデフォルトでLights/Tex/Dummy.pngを参照するようになっています。
　　Dummy.pngを差し替えるか、.pmxを編集することでライトに設定するテクスチャを変更できます。

　VOLUMETRIC_FOG [v24]
　　フォグが追加ライトの影響を受けるかどうか。


□ モーフによる設定

　ライトの種類によってあるものとないものがあります。

　ライト距離
　　ライトの届く距離を変更する。

　ライト角度
　　光の広がる角度を変更する。

　色R,G,B
　　ライトの色を変更する。

　ライト強度+/-
　　ライトの明るさを変更する。

　フォグ強度+/-
　　ボリュームフォグが有効な場合に、フォグへの影響力を調整する。

　シャープ度 [v24]
　　テクスチャ画像の鮮明度を変更する。

　ライトサイズ+
　ライト高+
　ライト幅+
　　ライトの大きさを変更する


--------------------------------------------------------------------------------
■ フォグ [v24]

　※ ikPolishShader.fxsub内の FOG_TYPE が1または2で有効になります。
　※ ボリュームフォグは、ikPolishController.pmxを使用することが前提になっています。
　※ フォグがあると半透明モデルは正常に表示されません。

□ 簡易フォグ

　FOG_TYPE 1のとき有効になるフォグ。
　距離に応じて環境マップの色の影響を受けます。

　コントローラの、「フォグ距離」と「フォグ濃度」で掛かり方を調整できます。


□ ボリュームフォグ

　FOG_TYPE 2のとき有効になるフォグ。

　基本：空気中にはチリなどの微小な物質があり、光があたると光を散乱させます。
　火事などで大量の煙が発生すると煙の先は見えなくなります。
　ボリュームフォグはこの現象を擬似的に再現します。

　モーフで、フォグの濃さ、光の散乱のしやすさ、光の遮蔽のしやすさを調整できます。


□ ikPolishShader.fxsubでの設定

　FOG_TYPE
　　フォグの種類を指定する

　FOG_QUALITY
　　ボリュームフォグのクオリティを指定する。
　　実体は、以下の設定を切り替える。

　　FOG_SLICE_SQRT
　　　フォグレイヤーの分割数の平方根
　　　1画面を縦横 FOG_SLICE_SQRT で分割して、FOG_SLICE_SQRT * FOG_SLICE_SQRT 枚のレイヤーにする。
　　　レイヤー数が多いほど奥行き方向の精度は上がるが、上下左右方向の精度は下がる。

　　MAX_FOG_STEP
　　　1レイヤーあたりの探索回数。
　　　数が多いほどきれいになるが、上げすぎてもそれほど効果はない。

　ENABLE_FOG_NOISE
　　フォグにノイズを付加するか。煙っぽい表現が可能になる。

　ENABLE_MAIN_LIGHT_FOG
　　フォグがメインライトの影響を受けるかどうか。
　　追加ライトはフォグに影響をあたえつつ、メインライトはフォグに影響を与えたくない場合に使用する。


□ コントローラでの設定

　フォグベース
　　フォグ関連ボーンの親。

　フォグ高度起点/端点
　　フォグの濃度が最大になる高さと、切れる高さを指定する。
　　画面全体をフォグに包みたい場合は 起点 の高さを上空に持っていく。

　フォグ風向大/小
　　ENABLE_FOG_NOISE でノイズを有効にした場合のノイズの流れる方向。
　　現在は、徐々に変化させることができないので、流れる方向を変えたい場合は、カット単位で切り替える。

　フォグ濃度
　　フォグが濃いほど光を散乱しやすく、視界を遮るようになる。

　フォグ距離
　　ボリュームフォグでは今のところ見ていません。

　フォグ散乱度+/-
　　光の散乱のしやすさ。

　フォグ減衰度
　　フォグによる光の減衰率。
　　光が減衰するほどフォグの先は見えなくなり、背景は暗くなる。
　　ある程度減衰させないと眩しくなりすぎる。

　フォグ視線依存
　　視線方向による散乱、減衰のしやすさを変更する。

　　晴れている場合、太陽の方向だけが白っぽく見えるが、太陽と垂直な方向は青く見える。
　　(青は視線依存度が低いため。ただしこの現象は未サポート)
　　雲はフォグ濃度が高いので常に白く見える。

　フォグノイズ
　　ノイズを平坦にする。


　※FogSettingsフォルダにフォグの設定を記録した .vmdファイルが入っています。

　　Sunny.vmd　　　晴天用。ほぼフォグは出ない。逆光でゴッドレイが出る。
　　Haze.vmd 　　　霧用。
　　Smoky.vmd　　　煙に包まれている状態。


□ 追加ライトでの設定

　Lightsフォルダ内のPL_**.fx内で VOLUMETRIC_FOG を 0にすることで、
　フォグが追加ライトの影響を受けないようにできる。デフォルトで有効。

　追加ライトのモーフ：フォグ強度+/-
　　フォグへのライト別の影響度を調整する。
　　その他の設定との兼ね合いで、暗く/明るくなりすぎる場合がある。


□ 参考にした資料

　Bart Wronski
　　https://bartwronski.files.wordpress.com/2014/08/bwronski_volumetric_fog_siggraph2014.pdf

　Sebastien Hillaire
　　https://www.ea.com/frostbite/news/physically-based-unified-volumetric-rendering-in-frostbite


--------------------------------------------------------------------------------
■ 平面反射

　※ ikPolishShader.fxsub内の PLANAR_REFLECTION が1で有効になります。

　ikPolishに統合する形で、Working Floor相当の平面反射を行います。

　PlanarReflectionMapRT タブで反射情報を作成します。
　基本的には、デフォルトのまま触る必要はありません。
　反射してほしくないものは、チェックを外して除外してください。
　または、PlanarReflection_mask.fxでマスクすることもできます。


　反射色の採用優先優先順位
　　1. 平面反射を使って画面内の計算結果を使う。
　　2. 平面反射を使って簡易色計算する。
　　3. スクリーンスペースリフレクション(SSR、RLR)で画面内の計算結果を使う。
　　4. 環境マップを使う。

　コントローラの「平面反射」ボーンで反射の基準位置を指定できます。[v25]
　姿見など、床以外で反射させたい場合に使用してください。
　※ v24までの、mirrorLocator.xによる指定は廃止しました。


--------------------------------------------------------------------------------
■ コントローラ

　※ コントローラを使用しない場合、すべての項目で0をしたのと同じ結果になります。

　直接光+/-　　ライトからの光の強弱を調整する。
　間接光+/-　　アンビエント項(空の色などの周囲からの影響)の強弱を調整する。
　SSAO+/-　　　SSAO(隅や狭まった部分を暗くする効果)の強さを調整する。
　SSAOバイアス　SSAO由来のノイズが出る場合に調整する。
　映り込み+/-　鏡面反射による映り込みの強さを調整する。
　SSS+/- 　　　半透明な物体で光が滲む効果を調整する。肌の透明感に影響する。
　GI+/-　　　　拡散反射による映り込みの強さを調整する。
　シャドウ 　　影をボカす強さを調整する。1で最大にボカす。
　フォグ距離 　空気遠近の掛かり始める距離を調整する。
　フォグ濃度 　空気遠近の濃度を調整する。
　　※ その他のフォグ関連のモーフは「フォグ」で説明しています。

　以下は、ikLinearEndの制御用：
　露出補正低減　自動露出補正の影響度を下げる。 [v25]
　露出+/-　　　画面の明るさを調整する。
　露出スナップ 画面の明るさを即座に変更する。
　　　　　　　 カット切り替えで明るさに差がある場合に使用する。
　ブルーム+/-　明るい部分が滲む効果を調整する。


--------------------------------------------------------------------------------
■ 軽量化のために

　ikPolishShader.fxsub内のQUALITY_LEVEL を 0にしてみる。
　　作業中はQUALITY_LEVEL:0にしておき、動画出力時にQUALITY_LEVEL:1にする。

　　QUALITY_LEVELを3(カスタム)にして不要な機能をカットする。
　　カット候補：
　　　RSMCount (床からの光の反射表現)
　　　EXTRA_LIGHTS (MMD標準ライト以外の追加ライトの有効化)
　　　RLRRayCount2 (映り込み表現の高機能版)
　　　RLRRayCount (映り込み表現)
　　　ENABLE_REFRACTION (屈折表現)

　MMEのエフェクト割当で、ikPolishの使用する ColorMapRT, ENvMapRT, 
　　RSMMapRT, SSAOMapRT, LightDepthRTタブから、不要そうなものを外す。


■ 重くする
　軽量化とは逆に速度を犠牲にしてもクオリティを向上させる方法。

　ikPolishShader.fxsub内の
　　QUALITY_LEVEL を 3にして、いろいろなパラメータの数値を上げてみる。

　MMDメニューの出力サイズを倍にする。
　　出力後にAviUtlや画像編集ソフトで動画/画像サイズを小さくする。


--------------------------------------------------------------------------------
■ トラブルシューティング

　重い
　　→ readme_detail.txtの「軽量化のために」を読んで、軽い設定にしてみる。

　暗い
　・光の当たっている場所が暗い
　　 a. MMDのライト色を大きな値にする。
　　 b. ikPolishController.pmxを入れて、直接光+で明るくする。

　・光の当たっていない場所が暗い
　　 a. EnvMapタブのスカイドームにTEnvMap_emissive.fxが割り当てられているか調べる。
　　 b. ikPolishController.pmxを入れて、間接光+で明るくする。
　　 c. スカイドームを明るいものに変える。
　　 d. LightDepthRTから光を遮っているものを外して、光を当てる。


　縁の部分がズレる。細い線が変に表示される。
　　 a. MMDのアンチエイリアスを無効にする。
　　 b. 大きくレンダリングして縮小して誤魔化す。

　金属なのに映り込まない。
　　材質の反射色の問題：[v25]
　　 a. モデル、テクスチャの色を明るくする。
　　 b. マテリアルファイルで、SPECULAR_COLOR_TYPE を変更してみる。

　　材質の滑らかさの問題：
　　 a. PMXエディタを開いて材質をチェックする。
　　　反射強度が低ければ、60程度にしてみる。
　　 b. MaterialMapの SMOOTHNESS_TYPE を 1か2にして、直接値を設定してみる。
　　　または、材質マップでSmoothnessを設定する。
　　　※ 材質の反射強度が小さいほど、Smoothnessが小さいほどハイライトや映り込みが暗くなります。
　　　※ 反射強度が高すぎると、ハイライトが強くなる代わりに、
　　　　ハイライトが小さくなりすぎて見えなくなる場合があります。

　　映りこむ側の問題：
　　 a. 周囲に映り込むものがない場合、スカイドームをおいてみる。


　アップになったキャラの影が消える。
　　 b. Shadows/shadow_common.fxsub 内の CascadeZMin を
　　　 3.0などにすることで対処できます。


--------------------------------------------------------------------------------
■ 既知の問題

　半透明を正しく扱うことができません。
　→ ikPolishShader.fxsub 内の AlphaThreshold の値を変更すると改善できる場合があります。


　目が暗くなる。
　→ MMDモデルによっては白目が現実の目玉のように凸状の球体ではなく、
　　凹状の眼窩になっている場合があります。
　　ikPolishはその形状のまま陰影計算を行うために、影が落ちて暗くなります。

　　supplementsフォルダの Proxyeye を目の部分に置くことで、陰影計算をごまかすことができます。


ikeno
Twitter: @ikeno_mmd
