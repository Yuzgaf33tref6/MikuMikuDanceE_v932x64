
ikPolishShader 詳説

--------------------------------------------------------------------------------
■ 概要

ikPolishShaderはPBR(物理ベースレンダリング)風のシェーダーです。
素材特性をあらわすパラメータを元に、周囲の物体を映りこませることで
立体感と素材感を出すことができます。

非力なグラボでは動作しない可能性があります。
「軽量化のために」の節を参考にしてください。

v.0.17, v.0.18で追加・修正した項目についてはそれぞれ[v017],[v018]のマークをつけてあります。


古いバージョンでの説明になりますが、使用方法やパラメータの設定について説明しています。
http://ch.nicovideo.jp/ikeno/blomaga/ar745854
http://www.nicovideo.jp/watch/sm27733338
http://www.nicovideo.jp/watch/sm27742363
　※ 仕様変更のため、現在とは挙動が異なっている場合があります。


--------------------------------------------------------------------------------
■ 目次
・使用方法
・ファイルの内容
・ikPolishShader.fxsub内の設定
・材質ファイル
・mainファイル
・MMEタブ
・追加ライト
・コントローラ
・軽量化のために
・重くする
・トラブルシューティング
・既知の問題


--------------------------------------------------------------------------------
■ 使用方法

□ 少しだけ細かい設定

0. モデルを読み込む。
　※ できるだけ背景を読み込んでください。このエフェクトはモデルに
　背景を映りこませることを目的としているため、無地の背景ではエフェクトの効果が出ません。
　無地の背景にしたい場合は、適当なスカイドームを追加してMainで非表示にすることを一考してください。

1. MMDに ikPolishShader.x を追加する。
　しばらく時間が掛かる場合があります。
　数分待っても帰ってこない場合は、「軽量化のために」の節を読んでください。

2. MMEのエフェクト割り当て：
2-1. Mainタブで、モデルやステージなどに Main/PolishMain.fx を割り当てる。
　※ スカイドームには割り当てないでください。

2-2. EnvMapタブで、モデルに映りこんで欲しくないものを除外する。

2-3. EnvMapタブで、スカイドームに対して、TEnvMap_emissive.fxを割り当てる。
　光っているもの、ライトの影響を受けないものにTEnvMap_emissive.fxを割り当てます。
　※ HDRから変換したスカイドームを使用している場合は、TEnvMap_rgbm.fxを割り当ててください。[v017]

(3. ikPolishController.pmx を追加する。
　ikPolishShader のライティング強度を調整するためのコントローラです。
　無くても動作します。)

4. アクセサリの描画順序を変更する。
　パーティクルなどの表示系のエフェクトよりは後に、
　レンズフレア、色調整、DoFなどより前のほうがいいでしょう。


□ 素材の設定

1. MMEのエフェクト割り当てを開き、
　ColorMapRTタブで、モデル・パーツに合った材質を指定する。

　金属には、Materialフォルダ内のMaterialMap_Metal.fx を、
　非金属には、MaterialMap.fx (デフォルト)を割り当ててください。

　スカイドームなど、このシェーダーの影響を受けたくないものには、
　MaterialMap_Mask.fx を割り当てます。

2. MaterialMap.fx をカスタマイズする。
　MaterialMap.fxをコピーペーストして、独自のMaterialMap.fxを作ります。
　自分の分かりやすい名前に変更したほうがよいでしょう。
　たとえば、服用であれば MaterialMap_Cloth.fx など。

　編集内容に関しては後述の「材質ファイル」を参考にしてください。

3.  MMEのエフェクト割り当てで、キャラのモデルをサブセット展開し、
　ColorMapRTタブの服の部分に、先ほど作成した MaterialMap_Cloth.fx を割り当てる。

　割り当てたあとで MaterialMap_Cloth.fx内のパラメータを変更すると、
　陰影が変化するのを確認できます。


最初は、すべての材質を細かく設定するよりも、
重要な部位に限定して大雑把に設定するほうがよいでしょう。

たとえば、艦娘であれば顔と体に肌用設定、艤装に金属、
それ以外はデフォルトのままでバランスを見る。
それから設定ファイル内のパラメータを調整したり、
その他の素材に合わせて髪、布、革などを設定していく等。


4. Mainタブで、
　カーテン、葉っぱなど逆光で光が透ける材質に、PolishMain_thinfilm.fxを割り当てる。
　肌が青白くなっている場合は、PolishMain_skin.fxを割り当てる。
　　※ 赤くする度合いは、PolishMain_skin.fx 内で設定可能です。
　ライトなどの光らせたい材質に対して、PolishMain_emissive.fxを割り当ててください。
　　※ AL4Polishと併用する場合は、PolishMain_AL.fxを割り当ててください。

5. モデルの反射色を修正。
　[v017] ※ Ver.0.17からモデルのスペキュラカラーを参照しないモードを追加しました。
　　　設定方法は、材質ファイル > 補助設定 の項を参照してください。

　スペキュラカラーが(0,0,0)に設定されていることが多いので、
　PMXエディタなどで明るい色に調整する必要があります。

　材質がマットなほど自動的にスペキュラが薄くなるため、
　基本的にはAL対応以外の材質は(1,1,1)に設定して構いません。

　金属属性を設定した材質は、モデルデータのスペキュラーカラーに応じて反射色を決定します。
　金属の色を明るめに指定してください。
　金なら薄い黄色、鉄なら50%の灰色など。

　※ モデルデータを書き換える場合は、オリジナルデータのバックアップを取ってから行ってください。


6. 反射強度の設定
　デフォルトのMaterialMapは、モデルの反射強度から素材表面の滑らかさを推定します。
　反射強度が0に近ければマットに、100前後で滑らかな素材とみなしています。

　細かい調整を行う場合は、反射強度を調整するより、MaterialMapファイルを書き換えて、
　直接滑らかさを指定できるようにしたほうが調整は簡単です。

　材質の滑らかさは、マテリアル設定ファイルで数値指定することも、
　テクスチャで設定することも可能です。

7. 素材の分離
　モデルによっては、異なる素材がPMX内で同じ材質に設定されている場合があります。
　例：脚とタイツが一体化している。

　この場合は、PMXエディタなどで素材毎に材質を分離するか、
　材質テクスチャで材質を指定する必要があります。


--------------------------------------------------------------------------------
■ ファイルの内容
　(詳細を知る必要がないと思われるファイルは除外しました)

　ikPolishShader.x　　　　アクセサリ
　ikPolishShader.fx　　　 エフェクトファイル
　ikPolishShader.fxsub　　エフェクト間で共有する設定ファイル。
　ikPolishController.pmx　コントローラ。光の強さなどを制御する。無くても動作する。

　Environmentsフォルダ
　　環境マップ用エフェクトファイル

　　TEnvMap.fx　　通常のオブジェクト用

　　TEnvMap_emissive.fx
　　　陰影計算をしないオブジェクト用。スカイドーム、自己発光している物など。

　　TEnvMap_rgbm.fx [v017]
　　　HDRIテクスチャを使用したスカイドーム用。

　Mainフォルダ
　　mainタブに割り当てるエフェクトファイル

　　PolishMain.fx　　　Mainタブ用。full.fxの代わりに使用する。

　　PolishMain_skin.fx　　擬似的なSSS処理有効版。
　　　通常は、材質に関係なくPolishMain.fxで十分です。
　　　肌の赤みが足りない場合に試してください。

　　PolishMain_thinfilm
　　　カーテン、木の葉など薄い材質が逆光で明るくなる場合用の設定です。

　　PolishMain_emissive.fx　光る素材用
　　　ランプなど光っている素材用

　　[v017] PolishMain_AL.fx　光る素材用
　　　ALで光る部分を明るくする。オリジナルのALよりも白くなりがち。

　　[v017] PolishMain_glass.fx　ガラス用
　　　半透明でもハイライトが強く出る。テスト実装。

　　[v018] PolishMain_clearcoat.fx　ツルツルな材質用
　　　形状のはっきりした反射を追加する。
　　　ワックスを塗った車のようになる。

　　[v018] PolishMain_light.fx　追加ライト用

　　[v018] forward_glass.fx　ガラス用2
　　　ガラスの後ろの材質がフラットになる場合に使用する。
　　　ガラス材質をColorMapRTから外して、mainでこのファイルを割り当てると、
　　　ガラスの背後を通常のPolishの光源計算で処理し、ガラスに対して擬似的な反射を追加する。

　　内容の詳細については後述の「mainファイル」を参考にしてください。

　Materialsフォルダ
　　材質設定用のエフェクトファイル群
　　カスタマイズして使用することを前提にしています。

　　MaterialMap.fx　　　　　非金属用(デフォルト)
　　MaterialMap_Metal.fx　　金属用
　　MaterialMap_Mask.fx 　　エフェクトを無効にする。スカイドームに使用する。
　　MaterialMap_Mirror.fx 　鏡っぽい設定。(※ モデル側の材質設定によっては全然映り込まない)
　　MaterialMap_Skin.fx 　　肌用。
　　MaterialMap_Velvet.fx 　ベルベット、毛糸用。

　　　基本的には、上記のファイルをコピーし、素材にあわせて改変することを前提にしています。

　　Materials/MaterialMultiMapフォルダ
　　　一括で材質を指定するためのエフェクト(のサンプル)。

　　内容については後述の「材質ファイル」を参考にしてください。

　Sourcesフォルダ
　　エフェクトが内部で使用するファイル


　Supplementsフォルダ
　　マテリアルテスト用のpmxや、スカイドームなど。
　　※ Ver.0.17には付属しません。またVer.0.16以前のものと互換性がありません。


--------------------------------------------------------------------------------
■ ikPolishShader.fxsub内の設定

　主要なもののみを列挙

　QUALITY_LEVEL
　　一括での品質レベル設定。
　　0が精度を下げて速度を上げる。3が速度を落として品質を上げる。

　[Obsolete] WORKSPACE_RES
　　陰影計算を半分のサイズで行うかどうか。
　　1:全画面サイズ、2:半分のサイズで計算を行う。
　　※ Ver.0.17から高速化のために、常に2の1/2解像度で処理を行うようになりました。

　SHADOW_QUALITY
　　シャドウマップのクオリティを調整する。
　　大きい数字ほどクオリティが高く、重くなる。

　RLRRayCount
　RLRRayCount2
　　映り込むものを調査する回数。多いほど正確で重い。
　　映り込むものが少ない場合は0にして無効にしたほうが軽くなります。

　SSAORayCount
　　奥まった部分に光が届くかどうか調査する回数。
　　多いほど正確で重い。0で無効。

　RSMCount
　　床や壁からの照り返しを計算するかどうか。その精度。
　　0で無効。16〜64で計算回数。大きい値ほど正確で重くなる。

　ENABLE_SSGI
　　ぼんやりした映り込みを行うかどうか。
　　白いシャツに周りの色が映り込むような効果。

　ENABLE_AA
　　簡易アンチエイリアスを有効にするかどうか。
　　ポリゴン境界での計算ミスを目立たなくする効果があります。
　　その他のアンチエイリアスエフェクトを使う場合は、無効にしたほうがよいでしょう。

　SSAO_QUALITY
　　凹み部分を暗くする影のクオリティを調整する。
　　大きい数字ほどクオリティが高く、メモリを消費する。

　USE_STATIC_ENV
　　あらかじめ作成した環境マップファイルを指定する。
　　毎フレーム環境マップを生成しないことで、高速になります。

　[v017] ENV_MIPMAP
　　環境マップをボカすかどうか。
　　1のとき、平行四辺形に見えるアーティファクトをなじませる処理を実行する。


--------------------------------------------------------------------------------
■ 材質ファイル

□ 基本的な設定

　Metalness (0.0〜1.0)
　　金属なら1、非金属なら0にする。一応、中間の値も設定できる。
　　金属の上に塗料が塗られている場合、1より小さい値にします。

　Smoothness (0.0〜1.0)
　　表面の滑らかさ。0でマット。1でツルツル。

　　ENABLE_AUTO_SMOOTHNESS が有効な場合、
　　モデルに設定されたスペキュラパワー(反射強度)値から素材の滑らかさを推測します。

　Intensity (0.0〜1.0)
　　映り込み強度。0で映り込まない。1で映り込む。
　　Smoothnessの値を下げると、自動で映り込みの強さが減少します。

　[v018] NonmetalF0 (0.0〜0.2)
　　※ NonmetalF0の上限を0.2に制限しました。0.2以上に設定したい場合、
　　Metalnessを0.2などに設定することで、反射率を上げることができます。

　　非金属の垂直反射率。非金属の場合の映り込みやすさを指定する。
　　通常は0.05前後の値になります。ダイアモンドでも0.17程度です。

　　金属の垂直反射率は材質に設定されたマテリアルの色と
　　スペキュラカラー(反射色)から適当に決定します。
　　このため、スペキュラーカラーが黒いとほとんど映り込みません。

　　垂直反射率：
　　　水面を真上から見下ろしても、水面は周囲の景色をあまり映り込みません。
　　　しかし、水面に水平になるように視線を変えると徐々に水面に周囲が映り込みます。
　　　この現象は机の天板や駅構内の床などでも確認できます。

　　　対して、鏡は角度に(ほぼ)関係なく常に映り込みます。
　　　この角度と映り込み度合いの関係を示すのが垂直反射率になります。
　　　金属は高く、非金属は低い値を取ります。

　SSSValue (0.0〜1.0)
　　皮下散乱度：肌などの半透明なものに指定。0:不透明。1:半透明。
　　金属の場合は無視される。(※現在はバグで無視されません。将来修正予定。)

　　大きな値ほど、陰影計算の結果をボカします。
　　やり過ぎるとゴムや蝋燭のような質感になるので注意が必要です。


　まとめ
　　金属? あるいは金属っぽい質感 → Metalness を 1に。
　　それ以外 → Metalness を 0にする。

　　デフォルト設定だとツルツルすぎる or 逆にもっとツヤツヤにしたい。→
　　ENABLE_AUTO_SMOOTHNESS をコメントアウト。

　　ツルツルな素材?
　　　すごくツルツル。 → Smoothness を 0.8にする。
　　　そこそこツルツル → Smoothness を 0.6くらいに。
　　　マット → 0.2くらいにしてみる。
　
　　映り込みが強すぎる → Smoothness を下げてみる。
　　　まだ明るい？ → Intensityの値を下げてみる。

□ 補助設定

　[v017] USE_ALBEDO_AS_SPECULAR_COLOR
　　ベース色を反射色として使用するかどうか。
　　従来はテクスチャの色、モデルの拡散色と反射色から求めていた反射色を、
　　テクスチャの色とモデルの拡散色からだけで求めるようにする。
　　※ 金属の場合にだけ有効。

　[v017] MATERIAL_MASK
　　マスク扱いする。スカイドーム用。ikPolishの計算を全部無視する。

　[v017] DISABLE_ALPHA
　　透明度を無視する。主にHDRスカイドーム用。
　　(アルファに透明度ではなく、光の強さが入っているため)

　[v017] AlphaThreshold
　　半透明の材質の無視するしきい値
　　設定しない場合は0.5になる。

　SHADOW_TYPE
　　影の濃さを調整する。
　　デフォルトは1で、0を設定した場合、影の元になるオブジェクトが近いとき影を薄くする。
　　顔に落ちる髪の毛の影を軽減したい場合に使用する。
　　※ v.0.14以前の、Shadow_distance.fxsub に相当する。

□ 材質マップ指定

　USE_MATERIALMAP
　　材質マップを使用する。
　　使用する場合は、行頭の//を外してください。使用しない場合は行頭に//を付けます。

　[v017] USE_ROUGHNESS_MAP
　　スムースネスマップの値をラフネスとして扱う。
　　0: スムースネスとして扱う
　　1: 値を反転するだけ
　　2: 平方根を取って反転する

　MATERIALMAP_MAIN_FILENAME
　　材質マップの名前を指定する。
　　材質マップのr,g,b,a には、それぞれ
　　Metalness、Smoothness、Intensity, SSSが格納されているものとします。

　MaterialMapLoopNum
　　材質マップの繰り返し回数。
　　通常のカラーテクスチャと1:1対応するなら、1を指定する。
　　汎用の材質マップを割り当てる場合は、密度に応じて適宜調整してください。

　USE_SEPARATE_MAP
　　1枚テクスチャにつき、1つの情報を指定する。
　　USE_MATERIALMAPが無効でも、マップファイルを参照します。

　METALNESSMAP_FILENAME
　　メタルネス用のテクスチャを指定する。
　　行頭に//をつける(コメントアウトする)と、メタルネスマップを使用しません。
　　この場合、Metalness = ** で指定した値が使用されます。

　　テクスチャの値は、赤(R)チャンネルの値が使用されます。

　MetalnessMapLoopNum
　　メタルネスマップの繰り返し回数を指定する。

　SMOOTHNESSMAP_FILENAME
　INTENSITYMAP_FILENAME
　SSSMAP_FILENAME
　　それぞれ、スムースネス、映り込み強度、SSSマップを指定する。

　　機能はメタルネスマップと同様。
　　分割時は、常に赤(R)チャンネルの値が使用される点に注意してください。


□ 法線マップ指定

　USE_NORMALMAP
　　法線マップを使用する。
　　USE_NCHL_SETTINGS と併用する場合、メイン法線はNCHLのものが優先されます。
　　行頭の // を削除することで、法線マップが有効になります。

　NORMALMAP_MAIN_FILENAME
　　メイン法線マップ名
　NormalMapMainLoopNum
　　メイン法線マップの繰り返し回数
　NormalMapMainHeightScale
　　メイン法線マップの高さ補正。正の値で高くなる。0で平坦。

　NORMALMAP_SUB_FILENAME
　NormalMapSubLoopNum
　NormalMapSubHeightScale
　　サブ法線マップ(微細な凹凸用)。詳細はメイン法線マップを参照。


□ 他シェーダーの設定の利用

　USE_AUTOREFLECTION_SETTINGS
　　AutoReflectionの材質設定から材質の値を決定する。
　　※ AutoReflectionシェーダー用に設定されたモデルで動作チェックしていません。

　USE_NCHL_SETTINGS
　　NCHLシェーダーの材質設定を利用する。
　　スフィアマップのテクスチャのrgbを法線マップに、aをスペキュラマップとして扱う。

　　NCHL_ALPHA_AS_SMOOTHNESS　スペキュラ値をスムースネスとして使う。
　　NCHL_ALPHA_AS_INTENSITY　　スペキュラ値を映り込み強度として使う。
　　　片方のみを指定することも、両方指定することも可能です。
　　　どちらも指定しない場合、法線マップのみ利用して、aチャンネルの情報は捨てられます。

　　※ 設定用テクスチャが、スフィアマップとして描画されないように、
　　　NCHLの設定がされたモデルに割り当てる PolishMain.fx の
　　　IGNORE_SPHERE を有効にする必要があります。

　　※ スペキュラカラー(鏡面反射色)に設定されたパラメータは基本的に無視されます。


--------------------------------------------------------------------------------
■ mainファイル

　[v017] ENABLE_AL
　　有効にした場合、AutoLuminousで発光する部分を明るくする。
　　AutoLuminousを使うと二重に明るくなるので併用禁止。

　自己発光項(Emissive)
　　　PMXには自己発光項(emissive、暗闇でどれだけ光るか。
　　　PMXエディタ内では環境光)の設定がありますが、
　　　ほとんどのMMDモデルは実際には光っていないにも関わらずこの値を持っているため、
　　　ikPolishShaderでは基本的にこの項目を無視しています。
　　　本当に光る素材の場合、この設定で調整します。

　　　EMMISIVE_AS_AMBIENT
　　　　自己発光項を環境光として扱う。
　　　IGNORE_EMISSIVE
　　　　自己発光項を無視する。
　　　上記の2つともコメントアウトされている場合、自己発光項を自己発光項として扱う。

　DISABLE_HDR
　　これが有効な場合、1を超えた明るさをカットする。


　半透明表現
　　ENABLE_SSS
　　　偽半透明表現を有効にするか。
　　　肌表現用

　　ENABLE_BACKLIGHT
　　　光に対して裏向きになっていても明るくする。
　　　花、布など光を通す薄いものに使用します。

　[v018] ENABLE_VELVET
　　　ベルベット効果を有効にするか。
　　　輪郭を明るくする。
　　　※ スフィアの乗算で代用可能。


　映り込み表現
　　[v018] ENABLE_CLEARCOAT
　　　クリアコートを有効にする。
　　　マテリアルで指定したスペキュラに追加して、
　　　第二のスペキュラを与えることができる。

　　　※ 第二スペキュラはクリアコートに統合されました。

　　スフィアマップ
　　　IGNORE_SPHERE
　　　　完全にスフィアマップを無視する
　　　SphereScale
　　　　スフィアマップの強さを調整する。

　　ikPolishShaderはいわばスフィアマップを自動生成するエフェクトなので、
　　モデルに設定されたスフィアマップとは相性が悪いです。
　　このため、デフォルトでスフィアマップの影響を抑える設定にしています。

　　モデルによってはスフィアマップでモデル色を設定するものもあるため、
　　デフォルト設定ではおかしな色になる場合があります。


　ToonColor_Scale
　　影の色を ToonColor の設定に従って変調する度合。


--------------------------------------------------------------------------------
■ MMEタブ

　ikPolishが使用するタブの説明

　Main
　　通常の描画を行うためのMMD標準のタブ
　　ikPolishで描画する対象にはMainフォルダ内にあるエフェクトを割り当てる。
　　ikPolishShaderで事前に計算された情報を元に色を決定する。

　[v018] LightMapRT
　　追加ライトの計算結果を格納する。
　　追加ライト以外にチェックが付いている場合は外してください。

　ColorMapRT
　　モデルの材質情報など計算に必要な情報を書き出す。
　　各材質に従って、Materialsフォルダ内のエフェクトを割り当てる。
　　エフェクトは材質毎にカスタマイズする。

　EnvMapRT
　　鏡のようなモデルに映り込む画像を作成する。

　　[v017] メインのキャラが自分自身に映り込むと汚くなるので、
　　デフォルトで.pmx,.pmdは除外される。背景が.pmxなどの場合、
　　手動で描画対象にする必要がある。

　　街灯、空(スカイドーム)などMMDのライトの影響を受けないと思われる材質には、
　　TEnvMap_emissive.fxを割り当ててください。

　RSMMapRT
　　MMDライトの床や壁での反射を計算するための情報を出力する。
　　RSMはReflective Shadow Mapの略。

　[v017] SSAOMapRT
　　SSAO用の深度を設定する。
　　旧バージョンでの SSGIMapRT、SSDOMapRTタブに相当します。

　[v018] LightDepthRT (旧 LightMapRT)
　　シャドウマップ用にライトからの距離を計算する。
　　このタブでチェックを外したモデルは影を落とさなくなる。
　　影を落とさないモデルはここから除外しておいたほうが多少高速になる。


--------------------------------------------------------------------------------
■ 追加ライト

　[v018] ※ Ver.0.18からアクセサリによるポイントライトは廃止されました。

　Lightsフォルダ内のPointLight.pmx、SpotLight.pmx、SphereLight.pmx、PanelLight.pmx
　をmmdに入れてください。
　同じライトを複数同時に使用することができます。
　各.pmxの表情モーフで設定を行うことができます。

　Lightsフォルダ内のPL_**.fx内で各ライトのシャドウマップの設定などを変更できます。

　※ ikPolishShader.fxsub内の EXTRA_LIGHTS が0になっていると使用できません。


□ 各ライトについて

　PointLight.pmx
　　ポイントライト。従来のPPointLight*.xの代わり。

　SpotLight.pmx
　　スポットライト。懐中電灯などのように特定方向だけを照らすライト。
　　割り当ててあるテクスチャを変更することで光の形状を変更できる。

　SphereLight.pmx
　　大きさのある球形ライト。
　　割り当ててあるテクスチャを変更することで光の形状を変更できる。
　　mainには、PolishMain_emissive.fx を割り当てる。

　PanelLight.pmx
　　大きさのある矩形のライト。
　　割り当ててあるテクスチャを変更することで光の形状を変更できる。
　　mainには、PolishMain_emissive.fx を割り当てる。

　TubeLight.pmx
　　細長いライト。

　※ 影を落とす場合、PointLight、SphereLight、TubeLightは全方向に影を落とす
　　必要があるため重くなります。SpotLight、PanelLightで代用できる場合は、
　　そちらを使うほうが高速になります。


--------------------------------------------------------------------------------
■ コントローラ

　※ コントローラを使用しない場合、すべての項目で0をしたのと同じ結果になります。

　直接光+/-　　ライトからの光の強弱を調整する。
　間接光+/-　　アンビエント項(空の色などの周囲からの影響)の強弱を調整する。
　SSAO+/-　　　SSAO(隅や狭まった部分を暗くする効果)の強さを調整する。
　SSAOバイアス　SSAO由来のノイズが出る場合に調整する。
　映り込み+/-　鏡面反射による映り込みの強さを調整する。
　SSS+/- 　　　半透明な物体で光が滲む効果を調整する。肌の透明感に影響する。
　GI+/-　　　　拡散反射による映り込みの強さを調整する。
　[v017] シャドウ 　　影をボカす強さを調整する。1で最大にボカす。


--------------------------------------------------------------------------------
■ 軽量化のために

　ikPolishShader.fxsub内の
　　QUALITY_LEVEL を 0にしてみる。
　　作業中はQUALITY_LEVEL:0にしておき、動画出力時にQUALITY_LEVEL:1にする。

　　QUALITY_LEVELを3(カスタム)にして不要な機能をカットする。
　　カット候補：
　　　RSMCount (床からの光の反射表現)
　　　EXTRA_LIGHTS (MMD標準ライト以外の追加ライトの有効化)
　　　RLRRayCount2 (映り込み表現の高機能版)
　　　RLRRayCount (映り込み表現)

　[v017] MMDの表示 > アンチエイリアスのチェックを切ってみる。
　[v017] MMEのエフェクト割当で、ikPolishの使用する ColorMapRT, ENvMapRT, 
　　RSMMapRT, SSAOMapRT, LightDepthRTタブから、不要そうなものを外す。
　[v017] 32bit版を使用している場合、64bit版を使ってみる。


■ 重くする
　軽量化とは逆に速度を犠牲にしてもクオリティを向上させる方法。

　ikPolishShader.fxsub内の
　　QUALITY_LEVEL を 3にして、いろいろなパラメータの数値を上げてみる。

　MMDメニューの出力サイズを縦横倍にする。
　　出力後にAviUtlや画像編集ソフトで動画/画像サイズを小さくする。


--------------------------------------------------------------------------------
■ トラブルシューティング

　重い
　　→ readme_detail.txtの「軽量化のために」を読んで、軽い設定にしてみる。

　暗い
　　・光の当たっている場所が暗い
　　→ MMDのライト色を大きな値にする。
　　　 ikPolishController.pmxを入れて、直接光+で明るくする。

　　・光の当たっていない場所が暗い
　　→ EnvMapタブのスカイドームにTEnvMap_emissive.fxが割り当てられているか調べる。
　　　 ikPolishController.pmxを入れて、間接光+で明るくする。
　　　 スカイドームを明るいものに変える。

　　・顔に髪の影が乗る
　　→ ColorMapRTタブの顔の材質に割りあてる MaterialMap.fxの SHADOW_TYPEを0にする。
　　　 [v017] ikPolishController.pmxを入れて、"シャドウ"モーフで影を柔らかくする。


　縁の部分がズレる。細い線が変に表示される。
　→ 
　　大きくレンダリングして縮小して誤魔化す。

　金属なのに映り込まない。
　→
　　材質の反射色の問題：
　　・PMXエディタを開いて材質をチェックする。
　　　スペキュラカラー(鏡面反射色)が黒くないか調べる。
　　　暗い場合は、(0.5,0.5,0.5)以上の値にする。
　　　[v017] マテリアルファイルで、USE_ALBEDO_AS_SPECULAR_COLOR	を1にしてみる。

　　材質の滑らかさの問題：
　　・PMXエディタを開いて材質をチェックする。
　　　反射強度が低ければ、60程度にしてみる。
　　・MaterialMapの ENABLE_AUTO_SMOOTHNESS をコメントアウトして、直接Smoothnessを変更してみる。
　　　または、材質マップでSmoothnessを設定する。
　　　※ 材質の反射強度が小さいほど、Smoothnessが小さいほどハイライトや映り込みが暗くなります。

　　映りこむ側の問題：
　　・周囲に映り込むものがない → スカイドームをおくか、静的な環境マップを利用する。


　アップになったキャラの影が消える。
　　Shadows/shadow_common.fxsub 内の CascadeZMin を 3.0などにすることで対処できます。


--------------------------------------------------------------------------------
■ 既知の問題

　半透明を正しく扱うことができません。
　→ ikPolishShader.fxsub 内の AlphaThreshold の値を変更すると改善できる場合があります。


　目が暗くなる。
　→ MMDモデルによっては白目が現実の目玉のように凸状の球体ではなく、
　　凹状の眼窩になっている場合があります。
　　ikPolishはその形状のまま陰影計算を行うために、影が落ちて暗くなります。

　　本来の目の形状をした球または楕円を目のある部分に配置して、
　　Mainタブから消すことで陰影計算をこの仮の球で行わせることができます。

　　瞼を閉じたときに、この仮の白目がはみ出さないように、目を閉じたときだけ奥に引き込む
　　などの処理が必要になる場合があります。


ikeno
Twitter: @ikeno_mmd
